{"version":3,"file":"7bd859e7e96b3af3533fc53542bd4c5a7b025faa-12d297fddc0fb628483f.js","mappings":"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","sources":["webpack://inbio-gatsby/./node_modules/fast-deep-equal/react.js","webpack://inbio-gatsby/./src/containers/service/layout-04/index.jsx","webpack://inbio-gatsby/./src/layouts/header/layout-02/index.jsx","webpack://inbio-gatsby/./node_modules/react-simple-typewriter/dist/index.js","webpack://inbio-gatsby/./node_modules/react-tsparticles/esm/Particles.js","webpack://inbio-gatsby/./node_modules/react-tsparticles/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/Utils.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Canvas.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/FrameManager.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Random.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Options/Classes/Options.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Particle.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Point.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Range.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Particles.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Retina.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Container.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Loader.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","webpack://inbio-gatsby/./node_modules/tsparticles-engine/esm/engine.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-absorbers/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/Emitters.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","webpack://inbio-gatsby/./node_modules/tsparticles-plugin-emitters/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-roll/esm/RollUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-angle/esm/Options/Classes/RotateAnimation.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-angle/esm/Options/Classes/Rotate.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-angle/esm/RotateUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-move-base/esm/BaseMover.js","webpack://inbio-gatsby/./node_modules/tsparticles-move-base/esm/Utils.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-color/esm/ColorUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-connect/esm/Connector.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-push/esm/Pusher.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-remove/esm/Remover.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-slow/esm/Slower.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-image/esm/Utils.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-image/esm/ImageDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-life/esm/LifeUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-line/esm/LineDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-out-modes/esm/Utils.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/Linker.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/Utils.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/plugin.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-links/esm/interaction.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-polygon/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-size/esm/SizeUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-square/esm/SquareDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-star/esm/StarDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-text/esm/TextDrawer.js","webpack://inbio-gatsby/./node_modules/tsparticles-slim/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-move-base/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-move-parallax/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-attract/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bounce/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-bubble/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-connect/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-grab/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-pause/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-push/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-remove/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-repulse/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-slow/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-attract/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-particles-collisions/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-circle/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-image/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-line/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-square/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-star/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-shape-text/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-life/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-opacity/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-size/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-angle/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-color/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-stroke-color/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-out-modes/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-particles.js/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","webpack://inbio-gatsby/./node_modules/tsparticles/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-destroy/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-roll/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-tilt/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-twinkle/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-updater-wobble/esm/index.js","webpack://inbio-gatsby/./node_modules/tsparticles-interaction-external-trail/esm/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionTitle from \"@components/section-title\";\nimport ServiceCard from \"@components/service-card/layout-01\";\nimport { ItemType, SectionTitleType } from \"@utils/types\";\n\nconst ServicesArea = ({ data, id }) => {\n    return (\n        <div\n            className=\"rn-service-area rn-section-gap section-separator\"\n            id={id}\n        >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        {data?.section_title && (\n                            <SectionTitle\n                                align=\"center\"\n                                data-aos=\"fade-up\"\n                                data-aos-duration=\"500\"\n                                data-aos-delay=\"100\"\n                                data-aos-once=\"true\"\n                                {...data.section_title}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className=\"row row--25 mt_md--10 mt_sm--10\">\n                    {data?.items?.map((item) => (\n                        <div\n                            key={item.id}\n                            data-aos=\"fade-up\"\n                            data-aos-duration=\"500\"\n                            data-aos-delay=\"100\"\n                            data-aos-once=\"true\"\n                            className=\"col-lg-6 col-xl-4 col-md-6 col-sm-12 col-12 mt--50 mt_md--30 mt_sm--30\"\n                        >\n                            <ServiceCard\n                                title={item.title}\n                                description={item.description}\n                                path={item.path}\n                                icon={item.icon}\n                            />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nServicesArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        section_title: PropTypes.shape(SectionTitleType),\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nServicesArea.defaultProps = {\n    id: \"features\",\n};\n\nexport default ServicesArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"clsx\";\nimport Logo from \"@components/logo\";\nimport MainMenu from \"@components/main-menu\";\nimport Social, { SocialLink } from \"@ui/social\";\nimport BurgerButton from \"@ui/burger-button\";\nimport PopupMenu from \"@components/popup-menu\";\nimport Icon from \"@ui/icon\";\nimport { useOffcanvas } from \"@hooks\";\nimport { ImageType, MenuType, SocialType } from \"@utils/types\";\n\nconst Header = ({ className, data }) => {\n    const { offcanvas, offcanvasHandler } = useOffcanvas();\n\n    return (\n        <>\n            <div className=\"d-none d-xl-block\">\n                <header\n                    className={cn(\n                        \"rn-header-area d-flex align-items-start flex-column left-header-style\",\n                        className\n                    )}\n                >\n                    {data?.logo?.[0]?.src && (\n                        <Logo image={data.logo[0]} className=\"logo-area\" />\n                    )}\n                    {data?.menu && (\n                        <MainMenu menus={data.menu} navId=\"sideNavs\" />\n                    )}\n                    <div className=\"footer\">\n                        {data?.socials && (\n                            <div className=\"social-share-style-1 mt--40\">\n                                <span className=\"title\">find with me</span>\n                                <Social>\n                                    {data.socials.map((social) => (\n                                        <SocialLink\n                                            key={social.id}\n                                            path={social.path}\n                                        >\n                                            <Icon name={social.icon} />\n                                        </SocialLink>\n                                    ))}\n                                </Social>\n                            </div>\n                        )}\n                    </div>\n                </header>\n            </div>\n            <div className=\"header-style-2 d-block d-xl-none\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col-6\">\n                        {data?.logo?.[1]?.src && (\n                            <div className=\"header-left\">\n                                <Logo image={data.logo[1]} />\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"col-6\">\n                        <div className=\"header-right text-end\">\n                            <div className=\"hamberger-menu\">\n                                <i\n                                    id=\"menuBtn\"\n                                    className=\"feather-menu humberger-menu\"\n                                ></i>\n                            </div>\n                            <BurgerButton onClick={offcanvasHandler} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <PopupMenu\n                isOpen={offcanvas}\n                onClick={offcanvasHandler}\n                menus={data?.menu}\n                socials={data.socials}\n                slogan={data.slogan}\n                logo={data?.logo?.[1]}\n            />\n        </>\n    );\n};\n\nHeader.propTypes = {\n    className: PropTypes.string,\n    data: PropTypes.shape({\n        logo: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n        menu: PropTypes.arrayOf(PropTypes.shape(MenuType)),\n        socials: PropTypes.arrayOf(PropTypes.shape(SocialType)),\n        slogan: PropTypes.string,\n    }),\n};\n\nexport default Header;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"react/jsx-runtime\"),t=require(\"react\"),r=function(){return r=Object.assign||function(e){for(var t,r=1,o=arguments.length;r<o;r++)for(var n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},r.apply(this,arguments)};function o(e,t){var o,n;switch(t.type){case\"TYPE\":return r(r({},e),{speed:t.speed,text:null===(o=t.payload)||void 0===o?void 0:o.substring(0,e.text.length+1)});case\"DELAY\":return r(r({},e),{speed:t.payload});case\"DELETE\":return r(r({},e),{speed:t.speed,text:null===(n=t.payload)||void 0===n?void 0:n.substring(0,e.text.length-1)});case\"COUNT\":return r(r({},e),{count:e.count+1});default:return e}}var n=function(e){var r=e.words,n=void 0===r?[\"Hello World!\",\"This is\",\"a simple Typewriter\"]:r,i=e.loop,s=void 0===i?1:i,u=e.typeSpeed,l=void 0===u?80:u,c=e.deleteSpeed,d=void 0===c?50:c,a=e.delaySpeed,p=void 0===a?1500:a,y=e.onLoopDone,f=e.onType,v=e.onDelete,m=e.onDelay,h=t.useReducer(o,{speed:l,text:\"\",count:0}),T=h[0],g=T.speed,_=T.text,x=T.count,D=h[1],C=t.useRef(0),E=t.useRef(!1),S=t.useRef(!1),b=t.useRef(!1),k=t.useRef(!1),w=t.useCallback((function(){var e=x%n.length,t=n[e];S.current?(D({type:\"DELETE\",payload:t,speed:d}),\"\"===_&&(S.current=!1,D({type:\"COUNT\"}))):(D({type:\"TYPE\",payload:t,speed:l}),b.current=!0,_===t&&(D({type:\"DELAY\",payload:p}),b.current=!1,k.current=!0,setTimeout((function(){k.current=!1,S.current=!0}),p),s>0&&(C.current+=1,C.current/n.length===s&&(k.current=!1,E.current=!0)))),b.current&&f&&f(C.current),S.current&&v&&v(),k.current&&m&&m()}),[x,p,d,s,l,n,_,f,v,m]);return t.useEffect((function(){var e=setTimeout(w,g);return E.current&&clearTimeout(e),function(){return clearTimeout(e)}}),[w,g]),t.useEffect((function(){y&&E.current&&y()}),[y]),[_,{isType:b.current,isDelay:k.current,isDelete:S.current,isDone:E.current}]};var i=\"styles-module_blinkingCursor__yugAC\",s=\"styles-module_blinking__9VXRT\";!function(e,t){void 0===t&&(t={});var r=t.insertAt;if(e&&\"undefined\"!=typeof document){var o=document.head||document.getElementsByTagName(\"head\")[0],n=document.createElement(\"style\");n.type=\"text/css\",\"top\"===r&&o.firstChild?o.insertBefore(n,o.firstChild):o.appendChild(n),n.styleSheet?n.styleSheet.cssText=e:n.appendChild(document.createTextNode(e))}}(\".styles-module_blinkingCursor__yugAC{color:inherit;font:inherit;left:3px;line-height:inherit;opacity:1;position:relative;top:0}.styles-module_blinking__9VXRT{animation-duration:.8s;animation-iteration-count:infinite;animation-name:styles-module_blink__rqfaf}@keyframes styles-module_blink__rqfaf{0%{opacity:1}to{opacity:0}}\");var u=t.memo((function(t){var o=t.cursorBlinking,n=void 0===o||o,u=t.cursorStyle,l=void 0===u?\"|\":u,c=t.cursorColor,d=void 0===c?\"inherit\":c;return e.jsx(\"span\",r({style:{color:d},className:\"\".concat(i,\" \").concat(n?s:\"\")},{children:l}))}));exports.Cursor=u,exports.Typewriter=function(t){var r=t.words,o=void 0===r?[\"Hello World!\",\"This is\",\"a simple Typewriter\"]:r,i=t.loop,s=void 0===i?1:i,l=t.typeSpeed,c=void 0===l?80:l,d=t.deleteSpeed,a=void 0===d?50:d,p=t.delaySpeed,y=void 0===p?1500:p,f=t.cursor,v=void 0!==f&&f,m=t.cursorStyle,h=void 0===m?\"|\":m,T=t.cursorColor,g=void 0===T?\"inherit\":T,_=t.cursorBlinking,x=void 0===_||_,D=t.onLoopDone,C=t.onType,E=t.onDelay,S=t.onDelete,b=n({words:o,loop:s,typeSpeed:c,deleteSpeed:a,delaySpeed:y,onLoopDone:D,onType:C,onDelay:E,onDelete:S})[0];return e.jsxs(e.Fragment,{children:[e.jsx(\"span\",{children:b}),v&&e.jsx(u,{cursorStyle:h,cursorColor:g,cursorBlinking:x})]})},exports.useTypewriter=n;\n//# sourceMappingURL=index.js.map\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport equal from \"fast-deep-equal/react\";\nconst defaultId = \"tsparticles\";\nexport default class Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        return !equal(nextProps, this.props);\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: Object.assign(Object.assign({}, this.props.style), { width,\n                    height }) })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        var _a, _b, _c;\n        if (!this.state.init) {\n            return;\n        }\n        const cb = async (container) => {\n            if (this.props.container) {\n                this.props.container.current = container;\n            }\n            this.setState({\n                library: container,\n            });\n            if (this.props.loaded) {\n                await this.props.loaded(container);\n            }\n        };\n        const id = (_b = (_a = this.props.id) !== null && _a !== void 0 ? _a : Particles.defaultProps.id) !== null && _b !== void 0 ? _b : defaultId, container = this.props.url\n            ? await tsParticles.loadJSON(id, this.props.url)\n            : await tsParticles.load(id, (_c = this.props.params) !== null && _c !== void 0 ? _c : this.props.options);\n        await cb(container);\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (!easings.get(name)) {\n        easings.set(name, easing);\n    }\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item) => callback(item)) : callback(obj);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t) => callback(t)) : callback(obj) ? obj : undefined;\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e, _f;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * ((_a = transform.a) !== null && _a !== void 0 ? _a : 1),\n        b: rotateData.sin * ((_b = transform.b) !== null && _b !== void 0 ? _b : 1),\n        c: -rotateData.sin * ((_c = transform.c) !== null && _c !== void 0 ? _c : 1),\n        d: rotateData.cos * ((_d = transform.d) !== null && _d !== void 0 ? _d : 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_f = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _f !== void 0 ? _f : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n            this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d, _e;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        this._initTrail();\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this._trailFillColor = Object.assign(Object.assign({}, fillColor), { a: 1 / trail.length });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.handlers = {\n            mouseMove: (e) => this.mouseTouchMove(e),\n            touchStart: (e) => this.mouseTouchMove(e),\n            touchMove: (e) => this.mouseTouchMove(e),\n            touchEnd: () => this.mouseTouchFinish(),\n            mouseLeave: () => this.mouseTouchFinish(),\n            touchCancel: () => this.mouseTouchFinish(),\n            touchEndClick: (e) => this.mouseTouchClick(e),\n            mouseUp: (e) => this.mouseTouchClick(e),\n            mouseDown: () => this.mouseDown(),\n            visibilityChange: () => this.handleVisibilityChange(),\n            themeChange: (e) => this.handleThemeChange(e),\n            oldThemeChange: (e) => this.handleThemeChange(e),\n            resize: () => this.handleWindowResize(),\n        };\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n            if (!mousePos) {\n                return;\n            }\n            mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n            mouseInteractivity.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n    manageListeners(add) {\n        var _a;\n        const handlers = this.handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(handlers.oldThemeChange);\n                }\n                else {\n                    mediaMatch.removeListener(handlers.oldThemeChange);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, handlers.resize, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n","function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n","export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (typeof data.resize === \"boolean\") {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new OptionsColor();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.fillColor = OptionsColor.create(this.fillColor, data.fillColor);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n","import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n        this.factor = 1000;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n        if (area !== undefined) {\n            this.area = area;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultThemes.light = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        var _a;\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        (_a = this.pathGenerator) === null || _a === void 0 ? void 0 : _a.reset(this);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    init(id, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = \"increasing\";\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = \"increasing\";\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = \"decreasing\";\n                    break;\n            }\n        }\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = Object.assign({}, this.options.move.center), isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_f = this.options.move.center.radius) !== null && _f !== void 0 ? _f : 0,\n            mode: (_g = this.options.move.center.mode) !== null && _g !== void 0 ? _g : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        var _a;\n        for (const updater of this.container.particles.updaters) {\n            (_a = updater.reset) === null || _a === void 0 ? void 0 : _a.call(updater, this);\n        }\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n","import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n","import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n","function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(rgbColorManager);\naddColorManager(hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticleWobble\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveCenter\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveCenter\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\nexport { CollisionsAbsorb } from \"./Options/Classes/Particles/Collisions/CollisionsAbsorb\";\nexport { ResizeEvent } from \"./Options/Classes/Interactivity/Events/ResizeEvent\";\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emittersModeOptions;\n            if (modeEmitters && modeEmitters.value instanceof Array) {\n                if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                    emittersModeOptions = [];\n                    const usedIndexes = [];\n                    for (let i = 0; i < modeEmitters.random.count; i++) {\n                        const idx = arrayRandomIndex(modeEmitters.value);\n                        if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                            i--;\n                            continue;\n                        }\n                        usedIndexes.push(idx);\n                        emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                    }\n                }\n                else {\n                    emittersModeOptions = modeEmitters.value;\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n            }\n            const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n            executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n                this.addEmitter(emitter, ePosition);\n            });\n        }\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this._lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this._lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this._lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this._lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    getTransformValues(particle) {\n        var _a;\n        const roll = ((_a = particle.roll) === null || _a === void 0 ? void 0 : _a.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: getRandom() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n","import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n","import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","export class CircleDrawer {\n    draw(context, particle, radius) {\n        context.arc(0, 0, radius, 0, Math.PI * 2, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n}\n","import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !valueAnimation.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = \"decreasing\";\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n    }\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n    }\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);\n        }\n    }\n    reset() {\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (!radius || radius < 0 || !mousePos) {\n            return;\n        }\n        this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = this.color instanceof Array ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble(delta);\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble(delta);\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble(delta) {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble(delta) {\n        const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = itemFromSingleOrMultiple(modeColor);\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(delta, selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, delta, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n","import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n","export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n","import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        this._images = [];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        this._images = [];\n    }\n    draw(context, particle, radius, opacity) {\n        var _a;\n        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_a = image === null || image === void 0 ? void 0 : image.ratio) !== null && _a !== void 0 ? _a : 1, pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        context.globalAlpha = 1;\n    }\n    getImages(container) {\n        const containerImages = this._images.find((t) => t.id === container.id);\n        if (!containerImages) {\n            this._images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    getSidesCount() {\n        return 12;\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const container = particle.container, images = this.getImages(container).images, imageData = particle.shapeData, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        var _a;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(container).images, imageData = particle.shapeData, color = particle.getFillColor(), replaceColor = (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            var _a, _b;\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    loaded: true,\n                    ratio: imageData.width / imageData.height,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = (_a = imageData.fill) !== null && _a !== void 0 ? _a : particle.fill, close = (_b = imageData.close) !== null && _b !== void 0 ? _b : particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n    async loadImageShape(container, imageShape) {\n        var _a;\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substring(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = ((_a = imageShape.replaceColor) !== null && _a !== void 0 ? _a : imageShape.replace_color) ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_b) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case \"increasing\":\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = \"decreasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = \"increasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = \"increasing\";\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = \"increasing\";\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = \"decreasing\";\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        }, parallaxSmooth = options.interactivity.events.onHover.parallax.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (centerDistance.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (centerDistance.y - particle.offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle } from \"tsparticles-engine\";\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p1 : p2;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n","import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n","import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n","export class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius);\n        const side = this.getSidesData(particle, radius);\n        const sideCount = side.count.numerator * side.count.denominator;\n        const decimalSides = side.count.numerator / side.count.denominator;\n        const interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n        const interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        return (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        const sides = this.getSidesCount(particle);\n        return {\n            x: -radius / (sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        const sides = (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n","import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case \"increasing\":\n            if (particle.size.value >= maxValue) {\n                particle.size.status = \"decreasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.size.value <= minValue) {\n                particle.size.status = \"increasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","export class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const star = particle.shapeData, sides = this.getSidesCount(particle), inset = (_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return (_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n}\n","import { getHslAnimationFromHsl, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !colorValue.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = \"decreasing\";\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n        return;\n    }\n    const animationOptions = particle.stroke.color.animation, h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b;\n        const container = this.container;\n        particle.stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_a = rangeColorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable) ||\n                (((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadAngleUpdater } from \"tsparticles-updater-angle\";\nimport { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine) {\n    await loadBaseMover(engine);\n    await loadParallaxMover(engine);\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalPauseInteraction(engine);\n    await loadExternalPushInteraction(engine);\n    await loadExternalRemoveInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadExternalSlowInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n    await initPjs(engine);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine) {\n    engine.addMover(\"parallax\", () => new ParallaxMover());\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container));\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport function loadExternalPauseInteraction(engine) {\n    engine.addInteractor(\"externalPause\", (container) => new Pauser(container));\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container));\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport function loadExternalRemoveInteraction(engine) {\n    engine.addInteractor(\"externalRemove\", (container) => new Remover(container));\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container));\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container));\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n","import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    const imageDrawer = new ImageDrawer();\n    await engine.addShape(\"image\", imageDrawer);\n    await engine.addShape(\"images\", imageDrawer);\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape(\"edge\", drawer);\n    await engine.addShape(\"square\", drawer);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    const drawer = new TextDrawer();\n    for (const type of validTypes) {\n        await engine.addShape(type, drawer);\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container));\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n","const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { WobbleSpeed } from \"./WobbleSpeed\";\nimport { setRangeValue } from \"tsparticles-engine\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (typeof data.speed === \"number\") {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container));\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater());\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","$$typeof","ServicesArea","data","id","className","section_title","align","items","map","item","title","description","path","icon","defaultProps","offcanvas","offcanvasHandler","useOffcanvas","cn","logo","src","image","menu","menus","navId","socials","social","name","onClick","isOpen","slogan","e","t","r","assign","o","arguments","n","apply","this","type","speed","text","payload","substring","count","words","loop","s","u","typeSpeed","l","c","deleteSpeed","d","delaySpeed","p","y","onLoopDone","f","onType","v","onDelete","m","onDelay","h","useReducer","T","g","_","x","D","C","useRef","E","S","k","w","useCallback","current","setTimeout","useEffect","clearTimeout","isType","isDelay","isDelete","isDone","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","memo","cursorBlinking","cursorStyle","cursorColor","jsx","style","color","concat","children","cursor","jsxs","Fragment","defaultId","Particles","Component","props","super","state","init","library","undefined","destroy","setState","shouldComponentUpdate","nextProps","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","async","loadParticles","componentWillUnmount","render","width","height","canvasClassName","_a","_b","_c","container","url","params","options","loaded","cb","EventDispatcher","_listeners","Map","addEventListener","listener","removeEventListener","get","set","push","dispatchEvent","args","forEach","handler","hasEventListener","removeAllEventListeners","delete","arr","idx","indexOf","splice","Vector3d","xOrCoords","z","coords3d","Error","origin","create","angle","Math","atan2","updateFromAngle","sqrt","getLengthSq","static","add","addTo","copy","clone","distanceTo","sub","distanceToSq","div","divTo","mult","multTo","rotate","cos","sin","setTo","v3d","subFrom","Vector","_random","random","easings","getEasing","value","getRandom","clamp","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getValue","enable","minimumValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","collisionVelocity","v1","v2","m1","m2","calcPositionOrRandomFromSize","_d","position","size","calcPositionOrRandomFromSizeRanged","calcExactPositionOrRandomFromSize","parseAlpha","input","endsWith","parseFloat","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","res","bounced","isSsr","window","safeMatchMedia","query","matchMedia","isInArray","array","loadFont","font","weight","fonts","load","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","offset","radius","direction","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","sources","sourceIsArray","isObject","destDict","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","getPosition","getRadius","mass","getMass","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","resH","resV","obj","itemFromSingleOrMultiple","find","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","stringToRgba","startsWith","stringPrefix","parseString","hexFixed","replace","result","exec","parseInt","rangeColorToRgb","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","hslToRgb","hsl","hslPercent","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","decay","status","sync","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p3","clear","dimension","clearRect","generatedAttribute","touchEndEvent","mouseMoveEvent","mouseLeaveEvent","setTransformValue","newFactor","newValue","Canvas","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","record","attributeName","_repairStyle","_fullScreen","actualOptions","fullScreen","trail","particles","move","backgroundMask","paint","_trailFillColor","_paintBase","draw","ctx","disconnect","remove","_resetOriginalStyle","drawParticle","delta","spawning","destroyed","pfColor","psColor","fColor","sColor","_getPluginParticleColors","_e","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","zOpacity","zStrokeOpacity","stroke","transform","colorStyles","fill","_applyPreDrawUpdaters","_f","composite","shadow","pos","rotation","pathRotation","rotateData","transformData","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fillStyle","lineWidth","strokeWidth","strokeStyle","shape","drawer","drawers","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","sizeRate","_applyPostDrawUpdaters","drawParticlePlugin","plugin","drawPlugin","resize","_initStyle","_initCover","_initTrail","initBackground","observe","attributes","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","particleFillColor","particleStrokeColor","updater","updaters","afterDraw","getColorStyles","getTransformValues","beforeDraw","loadCanvas","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","cover","_coverColorStyle","pxRatio","newSize","oldSize","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","_applyResizePlugins","updaterTransform","coverRgb","coverColor","_setFullScreenStyle","setProperty","fillColor","baseColor","fillRect","paintBase","originalStyle","priority","manageListener","event","addOptions","passive","capture","removeOptions","EventListeners","canPush","handlers","mouseMove","mouseTouchMove","touchStart","touchMove","touchEnd","mouseTouchFinish","mouseLeave","touchCancel","touchEndClick","mouseTouchClick","mouseUp","mouseDown","visibilityChange","handleVisibilityChange","themeChange","handleThemeChange","oldThemeChange","handleWindowResize","addListeners","manageListeners","removeListeners","doMouseTouchClick","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","handleClickMode","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","resizeTimeout","windowResize","delay","detectType","detectsOn","mouseLeaveTmpEvent","canvasEl","parentElement","parentNode","mediaMatch","addListener","removeListener","interactivityEl","html","onHover","pointerEvents","ResizeObserver","resizeObserver","unobserve","entries","target","clicking","downPosition","handled","mousePosition","clickPositionValid","_g","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","FrameManager","timestamp","smooth","lastFrameTime","fpsLimit","initDelta","lifeTime","duration","console","error","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","Parallax","force","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","maxSpeed","MovePath","generator","MoveTrail","OutModes","Spin","Move","attract","center","drift","gravity","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","AnimationOptions","OpacityAnimation","startValue","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","character","custom","images","polygon","_value","loadShape","mainKey","altKey","altOverride","emptyValue","mainDifferentValues","altDifferentValues","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","autoPlay","detectRetina","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","preset","_importPreset","optResponsive","sort","existingTheme","optTheme","_findDefaultTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","getPreset","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","isEnabled","interact","reset","fixOutMode","checkModes","coord","maxCoord","setCb","Particle","overrideOptions","override","unbreakable","inRange","slow","particleDestroyed","pathGenerator","roll","backColor","alter","backFactor","backSum","PI","alterHsl","strokeColor","_h","_j","lastPathTime","misplaced","maxDistance","outType","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","shapeOptions","shapeData","_loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","zIndexValue","initParticle","sizeOptions","sizeRange","sizeAnimation","loops","maxLoops","_calcPosition","initialPosition","canvasSize","moveCenter","isCenterPercent","getParticleDirectionAngle","initialVelocity","_calculateVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","baseVelocity","getParticleBaseVelocity","moveOptions","rad","radOffset","range","collisionsOptions","overlapOptions","overlaps","Point","Range","Circle","contains","intersects","rect","circle","distPos","abs","pow","Rectangle","w2","h2","QuadTree","rectangle","capacity","_points","_divided","insert","subdivide","_NE","_NW","_SE","_SW","check","found","queryCircle","queryRectangle","nextId","zArray","pool","interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","initializer","countToRemove","removeQuantity","_pushParticle","update","particlesInitialization","pathGenerators","groupOptions","j","nb","pushing","removeAt","quantity","deleted","zIdx","_applyDensity","particlesToDelete","particleUpdate","externalInteract","particlesInteract","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","densityOptions","pop","canAdd","warn","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_delay","_firstStart","_paused","_sourceOptions","_initialSourceOptions","frameManager","_options","_eventListeners","IntersectionObserver","_intersectionObserver","_intersectionManager","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","changedTouches","radiusX","radiusY","has","stop","mainArr","dom","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","nextFrame","exportConfiguration","JSON","stringify","exportImage","quality","toBlob","exportImg","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","handle","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","Promise","resolve","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","entry","isIntersecting","Loader","tagId","remote","jsonUrl","loadRemoteOptions","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","querySelector","append","currentOptions","oldIndex","old","domItem","tagName","toLowerCase","existingCanvases","newItem","newId","newIndex","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","needsPlugin","ExternalInteractorBase","ParticlesInteractorBase","rgbColorManager","rgbColor","hslColorManager","hsla","rgbResult","hslaToRgba","tsParticles","_domArray","_eventDispatcher","_initialized","_loader","interactorInitializer","moverInitializer","updaterInitializer","customDrawer","pathConfigJson","loadJSON","instance","setJSON","setOnClickHandler","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","dragging","calcPosition","sizeFactor","absorberOrbit","needsNewPosition","updateParticlePosition","translate","arc","newPosition","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","removeAbsorber","AbsorbersPlugin","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","Destroy","split","DestroyUpdater","destroyOptions","splitCount","destroyBounds","addSplitParticle","parent","splitParticlesOptions","splitOptions","particlesSplitOptions","CircleShape","randomPosition","randomTheta","theta","atan","tan","generateTheta","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","_shape","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","_particlesOptions","_lifeCount","_immortal","emitter","externalPause","externalPlay","elRect","getSize","_emitDelay","prepareToDie","emitParticles","_duration","emit","removeEmitter","singleParticlesOptions","hslAnimation","pPosition","initValue","maxValue","colorOffset","emitFactor","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","pauseEmitter","emitterOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","addShape","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","Trail","pauseOnStop","TrailMaker","trailOptions","optDelay","canEmit","_lastPosition","RollLight","Roll","darken","enlighten","RollUpdater","rollHorizontal","rollVertical","rollOpt","alterType","updateRoll","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","updateAngle","BaseMover","gravityOptions","spinOptions","spinPos","spinCenter","spinAcceleration","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","maxCanvasSize","applyPath","gravityFactor","zVelocityFactor","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","updateColorValue","valueAnimation","decrease","ColorUpdater","updateColor","Attract","easing","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","hoverAttract","clickAttract","attractRadius","processAttract","attractOptions","attractFactor","normVec","Bounce","Bouncer","bounceModeDistance","processMouseBounce","singleSelectorBounce","processBounce","tolerance","querySelectorAll","elem","offsetLeft","offsetTop","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","bubbleModeDistance","bubbleModeSize","hoverBubble","clickBubble","singleSelectorHover","divBubble","mouseClickPos","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","particlesObj","process","opacityData","hoverBubbleColor","pointDistance","hoverBubbleSize","hoverBubbleOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","repulseRadius","ConnectLinks","Connect","links","lineLinked","line_linked","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","particles_nb","Pusher","pushOptions","pushNb","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","Repulser","repulse","repulseModeDistance","hoverRepulse","clickRepulse","singleSelectorRepulse","divRepulse","repulseDistance","vect","processRepulse","repulseOptions","repulseFactor","Slow","Slower","slowModeRadius","particlePos","dist","proximityFactor","currentColorRegex","loadImage","loading","img","Image","downloadSvgImage","svgData","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","_images","addImage","containerImages","getImages","globalAlpha","drawImage","loadImageShape","imageFunc","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","delayTime","time","justSpawned","widthRange","heightRange","LineDrawer","OpacityUpdater","opacityOptions","opacityAnimation","opacityRange","minValue","checkDestroy","updateOpacity","BounceOutMode","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","updateOutMode","ParallaxMover","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","resolveCollision","Collider","radius1","radius2","round","CircleWarp","posNE","posSE","posSW","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","pos2NE","pos2SE","pos2SW","Linker","linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setColor","setLinkFrequency","dictionary","join","LinkInstance","_freqs","pOptions","p1Links","getLinkFrequency","link","drawTriangles","drawLinkLine","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkTriangle","link1","link2","triangleOptions","opacityTriangle","pos3","colorTriangle","vertices","linkFreq","vertex","getTriangleFrequency","LinksPlugin","loadParticlesLinksInteraction","loadInteraction","loadPlugin","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","SizeUpdater","sizeVelocity","updateSize","fixFactor","SquareDrawer","StarDrawer","star","inset","StrokeColorUpdater","strokeHslColor","_k","updateStrokeColor","validTypes","TextDrawer","textData","textParticle","randomIndexData","fillText","strokeText","promises","all","loadSlim","addMover","loadBaseMover","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","loadCircleShape","imageDrawer","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadOpacityUpdater","loadSizeUpdater","loadAngleUpdater","loadColorUpdater","loadStrokeColorUpdater","loadOutModesUpdater","particlesJS","catch","pJSDom","initPjs","TiltAnimation","Tilt","TiltUpdater","tilt","cosDirection","sinDirection","tiltOptions","tiltDirection","tiltAnimation","updateTilt","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","twinklingOpacity","twinkleStyle","needsTwinkle","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","wobbleOpt","wobble","angleSpeed","wobbleDistance","updateWobble","loadFull","loadDestroyUpdater","loadRollUpdater","loadTiltUpdater","loadTwinkleUpdater","loadWobbleUpdater","loadExternalTrailInteraction","loadAbsorbersPlugin","addEmitterShape","loadEmittersPlugin"],"sourceRoot":""}