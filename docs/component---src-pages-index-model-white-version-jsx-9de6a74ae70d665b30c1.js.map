{"version":3,"file":"component---src-pages-index-model-white-version-jsx-9de6a74ae70d665b30c1.js","mappings":"8KA8FA,IAtFuB,IAQhB,IARiB,KACpBA,EAAI,QACJC,EAAO,MACPC,EAAK,MACLC,EAAK,SACLC,EAAQ,KACRC,EAAI,MACJC,GACH,EACG,OACI,gBAAC,IAAK,CACFN,KAAMA,EACNO,OAAQ,IAAMN,GAAQ,GACtBO,gBAAgB,YAChB,kBAAgB,qCAChBC,UAAU,GAEV,gBAAC,WAAY,KACT,gBAAC,UAAW,CACRC,GAAG,qCACHC,UAAU,mBAAiB,wBAI/B,0BACIC,KAAK,SACLD,UAAU,QACV,eAAa,QACb,aAAW,QACXE,QAAS,IAAMZ,GAAQ,IAEvB,wBAAM,cAAY,QACd,gBAAC,IAAC,SAId,gBAAC,SAAU,KACP,uBAAKU,UAAU,0BACX,uBAAKA,UAAU,YACX,uBAAKA,UAAU,8BACVT,aAAK,EAALA,EAAOY,MACJ,uBAAKH,UAAU,SACX,gBAAC,IAAK,CACFG,IAAKZ,EAAMY,IACXC,KAAKb,aAAK,EAALA,EAAOa,MAAOZ,EACnBQ,UAAU,aAO9B,uBAAKA,UAAU,YACX,uBAAKA,UAAU,gBACX,0BACI,0CAAkBP,GAAgB,IAAED,GAEvCG,aAAK,EAALA,EAAOU,KAAI,CAACC,EAAMC,IACf,qBACIP,UACIO,IAAMZ,EAAMa,OAAS,EAAI,SAAW,GAExCC,IAAKF,GAEJD,EAAKI,WAGd,uBAAKV,UAAU,4BAK3B,C,uFClBhB,IAtDsB,IAAyD,IAAxD,MAAER,EAAK,SAAEC,EAAQ,UAAEkB,EAAS,MAAEpB,EAAK,KAAEG,EAAI,MAAEC,GAAO,EACrE,MAAM,EAACN,EAAK,EAACC,IAAWsB,EAAAA,EAAAA,WAAS,GACjC,OACI,gCACI,uBACIZ,UAAU,eACVE,QAAS,IAAMZ,GAAQ,GACvBuB,WAAY,IAAMvB,GAAQ,GAC1BwB,KAAK,SACLC,SAAS,MAET,uBAAKf,UAAU,SACX,uBAAKA,UAAU,aACX,gBAAC,IAAM,CAACN,KAAMA,GACV,gBAAC,IAAK,CAACS,IAAKZ,EAAMY,IAAKC,KAAKb,aAAK,EAALA,EAAOa,MAAOZ,MAGlD,uBAAKQ,UAAU,WACX,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,iBACX,gBAAC,IAAM,CAACN,KAAMA,GAAOD,KAG7B,sBAAIO,UAAU,SACV,gBAAC,IAAM,CAACN,KAAMA,GACTF,EACD,gBAAC,IAAI,CAACwB,KAAK,sBAM/B,gBAAC,IAAc,CACX3B,KAAMA,EACNC,QAASA,EACTE,MAAOA,EACPC,SAAUA,EACVF,MAAOA,EACPI,MAAOA,EACPD,KAAMA,IAEX,C,yDC5CX,MAAMuB,EAAc,IAAyC,IAAxC,MAAEzB,EAAK,YAAE0B,EAAW,KAAExB,EAAI,KAAEyB,GAAM,EACnD,OACI,uBAAKnB,UAAU,cACX,uBAAKA,UAAU,SACVmB,GACG,uBAAKnB,UAAU,QACX,gBAAC,IAAI,CAACgB,KAAMG,KAGpB,uBAAKnB,UAAU,WACX,sBAAIA,UAAU,SACV,gBAAC,IAAM,CAACN,KAAMA,GAAOF,IAEzB,qBAAGQ,UAAU,eAAekB,GAC5B,gBAAC,IAAM,CAAClB,UAAU,mBAAmBN,KAAMA,GACvC,gBAAC,IAAI,CAACsB,KAAK,kBAIvB,gBAAC,IAAM,CAAChB,UAAU,YAAYN,KAAMA,GAChC,wBAAMM,UAAU,mBAAiB,iBAEnC,EAWdiB,EAAYG,aAAe,CACvB1B,KAAM,MAGV,K,qFC7BA,MAAM2B,EAAY,IAAiC,IAAD,cAA/B,aAAEC,EAAY,KAAEC,EAAI,GAAExB,GAAI,EACzC,OACI,uBACIA,GAAIA,EACJC,WAAWwB,EAAAA,EAAAA,GACP,+BACAF,GAAgB,sBAGpB,uBAAKtB,UAAU,aACX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,YACX,uBACI,WAAS,UACT,oBAAkB,OAClB,iBAAe,MACf,gBAAc,OACdA,UAAU,eAETuB,SAAY,QAAR,EAAJA,EAAME,cAAM,OAAK,QAAL,EAAZ,EAAe,UAAE,WAAb,EAAJ,EAAmBtB,MAChB,uBAAKH,UAAU,aACX,gBAAC,IAAK,CACFG,IAAKoB,EAAKE,OAAO,GAAGtB,IACpBC,KAAmB,QAAd,EAAAmB,EAAKE,OAAO,UAAE,aAAd,EAAgBrB,MAAO,aAMhD,uBACI,WAAS,UACT,oBAAkB,OAClB,iBAAe,MACf,gBAAc,OACdJ,UAAU,sBAEV,uBAAKA,UAAU,YACVuB,aAAI,EAAJA,EAAMG,gBACH,gBAAC,IAAiBH,EAAKG,eAE1BH,SAAW,QAAP,EAAJA,EAAM5B,aAAK,WAAP,EAAJ,EAAaU,KAAI,CAACC,EAAMC,IACrB,qBAAGP,UAAU,cAAcS,IAAKF,GAC3BD,EAAKI,WAGba,SAAa,QAAT,EAAJA,EAAMI,eAAO,WAAT,EAAJ,EAAetB,KAAI,QAAC,GAAEN,EAAE,KAAEL,EAAI,QAAEgB,GAAS,SACtC,gBAAC,IAAM,CAACD,IAAKV,EAAIL,KAAMA,GACnB,4BAAOgB,GACF,QAM3B,EAedW,EAAUD,aAAe,CACrBE,cAAc,EACdvB,GAAI,SAGR,K,uDClFA,MAAM6B,EAAW,IAAmB,IAAD,cAAjB,KAAEL,EAAI,GAAExB,GAAI,EAC1B,OACI,uBAAKC,UAAU,uBAAuBD,GAAIA,IACrCwB,SAAY,QAAR,EAAJA,EAAME,cAAM,OAAK,QAAL,EAAZ,EAAe,UAAE,WAAb,EAAJ,EAAmBtB,MAChB,uBAAKH,UAAU,YACX,gBAAC,IAAK,CACFG,IAAKoB,EAAKE,OAAO,GAAGtB,IACpBC,KAAmB,QAAd,EAAAmB,EAAKE,OAAO,UAAE,aAAd,EAAgBrB,MAAO,UAIxC,uBAAKJ,UAAU,aACX,uBAAKA,UAAU,0CACX,uBAAKA,UAAU,wCACX,uBAAKA,UAAU,WACX,uBAAKA,UAAU,iEACVuB,SAAc,QAAV,EAAJA,EAAMM,gBAAQ,WAAV,EAAJ,EAAiB,KACd,sBAAI7B,UAAU,SACTuB,EAAKM,SAAS,GAAGnB,UAGzBa,SAAW,QAAP,EAAJA,EAAM5B,aAAK,WAAP,EAAJ,EAAc,KACX,qBAAGK,UAAU,iBACRuB,EAAK5B,MAAM,GAAGe,cAQzC,EAadkB,EAASR,aAAe,CACpBrB,GAAI,QAGR,K,iEC/CA,MAAM+B,EAAgB,IAAmB,IAAD,MAAjB,KAAEP,EAAI,GAAExB,GAAI,EAC/B,OACI,uBAAKC,UAAU,mCAAmCD,GAAIA,GAClD,uBAAKC,UAAU,aACX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,cACVuB,aAAI,EAAJA,EAAMG,gBACH,gBAAC,IAAY,eACTK,MAAM,UACFR,EAAKG,kBAMzB,uBAAK1B,UAAU,kCACVuB,SAAW,QAAP,EAAJA,EAAMS,aAAK,WAAP,EAAJ,EAAa3B,KAAK4B,IAAI,aACnB,uBACIxB,IAAKwB,EAAKlC,GACV,WAAS,UACT,iBAAe,MACf,gBAAc,OACdC,UAAU,gEAEV,gBAAC,IAAa,CACVR,MAAOyC,EAAKzC,MACZC,SAAUwC,EAAKxC,SACfC,KAAMuC,EAAKvC,KACXiB,UAAWsB,EAAKtB,UAChBpB,MAAkB,QAAb,EAAE0C,EAAKR,cAAM,aAAX,EAAc,GACrB9B,MAAOsC,EAAKtC,QAEd,MAIhB,EAYdmC,EAAcV,aAAe,CACzBrB,GAAI,aAGR,K,uDCrDA,MAAMmC,EAAc,IAAmB,IAAD,MAAjB,KAAEX,EAAI,GAAExB,GAAI,EAC7B,OACI,uBAAKC,UAAU,iCAAiCD,GAAIA,GAChD,uBAAKC,UAAU,aACX,uBAAKA,UAAU,mCACVuB,SAAW,QAAP,EAAJA,EAAMS,aAAK,WAAP,EAAJ,EAAa3B,KAAK4B,GACf,uBACIxB,IAAKwB,EAAKlC,GACV,WAAS,UACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OACdC,UAAU,0EAEV,gBAAC,IAAW,CACRR,MAAOyC,EAAKzC,MACZ0B,YAAae,EAAKf,YAClBxB,KAAMuC,EAAKvC,KACXyB,KAAMc,EAAKd,YAM7B,EAWde,EAAYd,aAAe,CACvBrB,GAAI,YAGR,K,iECOA,IA7Ce,IAA0B,IAAD,YAAxB,UAAEC,EAAS,KAAEuB,GAAM,EAC/B,OACI,uBAAKvB,WAAWwB,EAAAA,EAAAA,GAAG,gCAAiCxB,IAChD,uBAAKA,UAAU,aACX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,aACX,uBAAKA,UAAU,4BACVuB,SAAU,QAAN,EAAJA,EAAMY,YAAI,OAAK,QAAL,EAAV,EAAa,UAAE,WAAX,EAAJ,EAAiBhC,MACd,gBAAC,IAAI,CACDZ,MAAOgC,EAAKY,KAAK,GACjBnC,UAAU,gBAGjBuB,SAAU,QAAN,EAAJA,EAAMY,YAAI,OAAK,QAAL,EAAV,EAAa,UAAE,WAAX,EAAJ,EAAiBhC,MACd,gBAAC,IAAI,CACDZ,MAAOgC,EAAKY,KAAK,GACjBnC,UAAU,cAGlB,qBAAGA,UAAU,sBAAoB,MACrB,IAAIoC,MAAOC,cAAa,KAC/Bd,aAAI,EAAJA,EAAMe,iBACH,wBACIC,wBAAyB,CACrBC,OAAQjB,EAAKe,uBAS3C,C,0JCwDd,UAhFuB,IAAe,IAAD,gBAAb,KAAEf,GAAM,EAC5B,MAAMb,GAAU+B,EAAAA,EAAAA,iBAAelB,SAAc,QAAV,EAAJA,EAAMmB,gBAAQ,WAAV,EAAJ,EAAgBhC,UAAW,IAE1D,OACI,gBAAC,IAAM,CAACiC,UAAU,aAAa3C,UAAU,iBACrC,gBAAC,IAAM,CACHA,UAAU,YACVuB,KAAM,IACCA,EAAKqB,UACLrB,EAAKsB,WACRC,QAASvB,EAAKwB,KAAKC,aAAaF,WAGxC,wBAAM9C,UAAU,qBACZ,gBAAC,IAAQ,CAACuB,KAAMb,EAAQ,kBACxB,gBAAC,IAAW,CAACa,KAAMb,EAAQ,qBAC3B,gBAAC,IAAS,CAACa,KAAMb,EAAQ,iBAAkBY,cAAY,IACvD,gBAAC,IAAY,CAACC,KAAMb,EAAQ,sBAC5B,gBAAC,IAAa,CAACa,KAAMb,EAAQ,uBAC7B,gBAAC,IAAU,CAACa,KAAMb,EAAQ,oBAC1B,gBAAC,IAAW,CACRa,KAAM,IACCb,EAAQ,mBACXoC,QAASvB,EAAKwB,KAAKC,aAAaF,QAChCG,MAA6B,QAAxB,EAAE1B,EAAKwB,KAAKC,oBAAY,OAAS,QAAT,EAAtB,EAAwBE,eAAO,WAAT,EAAtB,EAAiCD,MACxCE,MAA6B,QAAxB,EAAE5B,EAAKwB,KAAKC,oBAAY,OAAS,QAAT,EAAtB,EAAwBE,eAAO,WAAT,EAAtB,EAAiCC,MACxCC,YAAmC,QAAxB,EAAE7B,EAAKwB,KAAKC,oBAAY,aAAtB,EAAwBI,gBAIjD,gBAAC,IAAM,CAAC7B,KAAM,IAAKA,EAAK8B,QAAUrD,UAAU,sBACvC,C","sources":["webpack://inbio-gatsby/./src/components/modal-portfolio/index.jsx","webpack://inbio-gatsby/./src/components/portfolio-card/layout-01/index.jsx","webpack://inbio-gatsby/./src/components/service-card/layout-01/index.jsx","webpack://inbio-gatsby/./src/containers/about/layout-02/index.jsx","webpack://inbio-gatsby/./src/containers/hero/layout-02/index.jsx","webpack://inbio-gatsby/./src/containers/portfolio/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/service/layout-03/index.jsx","webpack://inbio-gatsby/./src/layouts/footer/layout-01/index.jsx","webpack://inbio-gatsby/./src/pages/index-model-white-version.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { X, ThumbsUp, ChevronRight } from \"react-feather\";\nimport Image from \"@ui/image\";\nimport Button from \"@ui/button\";\nimport { ImageType, TextType } from \"@utils/types\";\n\nconst PortfolioModal = ({\n    show,\n    setShow,\n    image,\n    title,\n    category,\n    path,\n    texts,\n}) => {\n    return (\n        <Modal\n            show={show}\n            onHide={() => setShow(false)}\n            dialogClassName=\"modal-90w\"\n            aria-labelledby=\"example-custom-modal-styling-title\"\n            centered={true}\n        >\n            <Modal.Header>\n                <Modal.Title\n                    id=\"example-custom-modal-styling-title\"\n                    className=\"visually-hidden\"\n                >\n                    Custom Modal Styling\n                </Modal.Title>\n                <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={() => setShow(false)}\n                >\n                    <span aria-hidden=\"true\">\n                        <X />\n                    </span>\n                </button>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"row align-items-center\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"portfolio-popup-thumbnail\">\n                            {image?.src && (\n                                <div className=\"image\">\n                                    <Image\n                                        src={image.src}\n                                        alt={image?.alt || title}\n                                        className=\"w-100\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                        <div className=\"text-content\">\n                            <h3>\n                                <span>Featured - {category}</span> {title}\n                            </h3>\n                            {texts?.map((text, i) => (\n                                <p\n                                    className={\n                                        i !== texts.length - 1 ? \"mb--30\" : \"\"\n                                    }\n                                    key={i}\n                                >\n                                    {text.content}\n                                </p>\n                            ))}\n                            <div className=\"button-group mt--20\"></div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nPortfolioModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    setShow: PropTypes.func.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n};\n\nexport default PortfolioModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ImageType, TextType } from \"@utils/types\";\nimport Image from \"@ui/image\";\nimport Anchor from \"@ui/anchor\";\nimport Icon from \"@ui/icon\";\nimport PortfolioModal from \"@components/modal-portfolio\";\n\nconst PortfolioCard = ({ title, category, likeCount, image, path, texts }) => {\n    const [show, setShow] = useState(false);\n    return (\n        <>\n            <div\n                className=\"rn-portfolio\"\n                onClick={() => setShow(true)}\n                onKeyPress={() => setShow(true)}\n                role=\"button\"\n                tabIndex=\"-1\"\n            >\n                <div className=\"inner\">\n                    <div className=\"thumbnail\">\n                        <Anchor path={path}>\n                            <Image src={image.src} alt={image?.alt || title} />\n                        </Anchor>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"category-info\">\n                            <div className=\"category-list\">\n                                <Anchor path={path}>{category}</Anchor>\n                            </div>\n                        </div>\n                        <h4 className=\"title\">\n                            <Anchor path={path}>\n                                {title}\n                                <Icon name=\"ArrowUpRight\" />\n                            </Anchor>\n                        </h4>\n                    </div>\n                </div>\n            </div>\n            <PortfolioModal\n                show={show}\n                setShow={setShow}\n                title={title}\n                category={category}\n                image={image}\n                texts={texts}\n                path={path}\n            />\n        </>\n    );\n};\n\nPortfolioCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    likeCount: PropTypes.number,\n    image: PropTypes.shape(ImageType).isRequired,\n    path: PropTypes.string.isRequired,\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n};\n\nexport default PortfolioCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Anchor from \"@ui/anchor\";\nimport Icon from \"@ui/icon\";\n\nconst ServiceCard = ({ title, description, path, icon }) => {\n    return (\n        <div className=\"rn-service\">\n            <div className=\"inner\">\n                {icon && (\n                    <div className=\"icon\">\n                        <Icon name={icon} />\n                    </div>\n                )}\n                <div className=\"content\">\n                    <h4 className=\"title\">\n                        <Anchor path={path}>{title}</Anchor>\n                    </h4>\n                    <p className=\"description\">{description}</p>\n                    <Anchor className=\"read-more-button\" path={path}>\n                        <Icon name=\"ArrowRight\" />\n                    </Anchor>\n                </div>\n            </div>\n            <Anchor className=\"over-link\" path={path}>\n                <span className=\"visually-hidden\">overlay link</span>\n            </Anchor>\n        </div>\n    );\n};\n\nServiceCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n};\n\nServiceCard.defaultProps = {\n    path: \"#!\",\n};\n\nexport default ServiceCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"clsx\";\nimport SectionTitle from \"@components/section-title\";\nimport Image from \"@ui/image\";\nimport Button from \"@ui/button\";\nimport {\n    SectionTitleType,\n    TextType,\n    ImageType,\n    ButtonType,\n} from \"@utils/types\";\n\nconst AboutArea = ({ hasSeparator, data, id }) => {\n    return (\n        <div\n            id={id}\n            className={cn(\n                \"rn-about-area rn-section-gap\",\n                hasSeparator && \"section-separator\"\n            )}\n        >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-5\">\n                        <div\n                            data-aos=\"fade-up\"\n                            data-aos-duration=\"1000\"\n                            data-aos-delay=\"100\"\n                            data-aos-once=\"true\"\n                            className=\"image-area\"\n                        >\n                            {data?.images?.[0]?.src && (\n                                <div className=\"thumbnail\">\n                                    <Image\n                                        src={data.images[0].src}\n                                        alt={data.images[0]?.alt || \"About\"}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div\n                        data-aos=\"fade-up\"\n                        data-aos-duration=\"1000\"\n                        data-aos-delay=\"100\"\n                        data-aos-once=\"true\"\n                        className=\"col-lg-7 mt_sm--30\"\n                    >\n                        <div className=\"contant\">\n                            {data?.section_title && (\n                                <SectionTitle {...data.section_title} />\n                            )}\n                            {data?.texts?.map((text, i) => (\n                                <p className=\"discription\" key={i}>\n                                    {text.content}\n                                </p>\n                            ))}\n                            {data?.buttons?.map(({ id, path, content }) => (\n                                <Button key={id} path={path}>\n                                    <span>{content}</span>\n                                </Button>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nAboutArea.propTypes = {\n    hasSeparator: PropTypes.bool,\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        section_title: PropTypes.shape(SectionTitleType),\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n        images: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n        buttons: PropTypes.arrayOf(PropTypes.shape(ButtonType)),\n    }),\n};\n\nAboutArea.defaultProps = {\n    hasSeparator: false,\n    id: \"about\",\n};\n\nexport default AboutArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport { ImageType, HeadingType, TextType } from \"@utils/types\";\n\nconst HeroArea = ({ data, id }) => {\n    return (\n        <div className=\"slide slider-style-4\" id={id}>\n            {data?.images?.[0]?.src && (\n                <div className=\"hero-img\">\n                    <Image\n                        src={data.images[0].src}\n                        alt={data.images[0]?.alt || \"Hero\"}\n                    />\n                </div>\n            )}\n            <div className=\"container\">\n                <div className=\"row justify-content-center text-center\">\n                    <div className=\"order-2 order-lg-1 col-lg-9 col-xl-7\">\n                        <div className=\"content\">\n                            <div className=\"inner fashion-designer-inner model mb--0 mt--180 text-center\">\n                                {data?.headings?.[0] && (\n                                    <h1 className=\"title\">\n                                        {data.headings[0].content}\n                                    </h1>\n                                )}\n                                {data?.texts?.[0] && (\n                                    <p className=\"disc fd-lorem\">\n                                        {data.texts[0].content}\n                                    </p>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nHeroArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        headings: PropTypes.arrayOf(PropTypes.shape(HeadingType)),\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n        images: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n    }),\n};\n\nHeroArea.defaultProps = {\n    id: \"home\",\n};\n\nexport default HeroArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionTitle from \"@components/section-title\";\nimport PortfolioCard from \"@components/portfolio-card/layout-01\";\nimport { ItemType, SectionTitleType } from \"@utils/types\";\n\nconst PortfolioArea = ({ data, id }) => {\n    return (\n        <div className=\"rn-portfolio-area rn-section-gap\" id={id}>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        {data?.section_title && (\n                            <SectionTitle\n                                align=\"center\"\n                                {...data.section_title}\n                            />\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"row mt--10 mt_md--10 mt_sm--10\">\n                    {data?.items?.map((item) => (\n                        <div\n                            key={item.id}\n                            data-aos=\"fade-up\"\n                            data-aos-delay=\"100\"\n                            data-aos-once=\"true\"\n                            className=\"col-lg-6 col-xl-6 col-md-6 col-12 mt--30 mt_md--30 mt_sm--30\"\n                        >\n                            <PortfolioCard\n                                title={item.title}\n                                category={item.category}\n                                path={item.path}\n                                likeCount={item.likeCount}\n                                image={item.images?.[0]}\n                                texts={item.texts}\n                            />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPortfolioArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        section_title: PropTypes.shape(SectionTitleType),\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nPortfolioArea.defaultProps = {\n    id: \"portfolio\",\n};\n\nexport default PortfolioArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ServiceCard from \"@components/service-card/layout-01\";\nimport { ItemType } from \"@utils/types\";\n\nconst ServiceArea = ({ data, id }) => {\n    return (\n        <div className=\"rn-service-area rn-section-gap\" id={id}>\n            <div className=\"container\">\n                <div className=\"row row--25 mt_md--10 mt_sm--10\">\n                    {data?.items?.map((item) => (\n                        <div\n                            key={item.id}\n                            data-aos=\"fade-up\"\n                            data-aos-duration=\"500\"\n                            data-aos-delay=\"100\"\n                            data-aos-once=\"true\"\n                            className=\"col-lg-6 col-xl-4 col-md-6 col-sm-12 col-12 mt--50 mt_md--30 mt_sm--30\"\n                        >\n                            <ServiceCard\n                                title={item.title}\n                                description={item.description}\n                                path={item.path}\n                                icon={item.icon}\n                            />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nServiceArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nServiceArea.defaultProps = {\n    id: \"features\",\n};\n\nexport default ServiceArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"clsx\";\nimport Logo from \"@components/logo\";\nimport { ImageType } from \"@utils/types\";\n\nconst Footer = ({ className, data }) => {\n    return (\n        <div className={cn(\"rn-footer-area rn-section-gap\", className)}>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"footer-area text-center\">\n                            {data?.logo?.[0]?.src && (\n                                <Logo\n                                    image={data.logo[0]}\n                                    className=\"light-logo\"\n                                />\n                            )}\n                            {data?.logo?.[1]?.src && (\n                                <Logo\n                                    image={data.logo[1]}\n                                    className=\"dark-logo\"\n                                />\n                            )}\n                            <p className=\"description mt--30\">\n                                &copy; {new Date().getFullYear()}.\n                                {data?.copyright_text && (\n                                    <span\n                                        dangerouslySetInnerHTML={{\n                                            __html: data.copyright_text,\n                                        }}\n                                    />\n                                )}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFooter.propTypes = {\n    className: PropTypes.string,\n    data: PropTypes.shape({\n        logo: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n        copyright_text: PropTypes.string,\n    }),\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { normalizedData } from \"@utils\";\nimport Layout from \"@layout\";\nimport Header from \"@layout/header/layout-01\";\nimport Footer from \"@layout/footer/layout-01\";\nimport HeroArea from \"@containers/hero/layout-02\";\nimport ServiceArea from \"@containers/service/layout-03\";\nimport AboutArea from \"@containers/about/layout-02\";\nimport ParallaxArea from \"@containers/parallax\";\nimport PortfolioArea from \"@containers/portfolio/layout-03\";\nimport ClientArea from \"@containers/client/layout-03\";\nimport ContactArea from \"@containers/contact/layout-01\";\n\nconst IndexModelPage = ({ data }) => {\n    const content = normalizedData(data?.homePage?.content || []);\n\n    return (\n        <Layout pageTitle=\"Home Model\" className=\"white-version\">\n            <Header\n                className=\"rn-d-none\"\n                data={{\n                    ...data.header,\n                    ...data.navigation,\n                    socials: data.site.siteMetadata.socials,\n                }}\n            />\n            <main className=\"main-page-wrapper\">\n                <HeroArea data={content[\"hero-section\"]} />\n                <ServiceArea data={content[\"service-section\"]} />\n                <AboutArea data={content[\"about-section\"]} hasSeparator />\n                <ParallaxArea data={content[\"parallax-section\"]} />\n                <PortfolioArea data={content[\"portfolio-section\"]} />\n                <ClientArea data={content[\"client-section\"]} />\n                <ContactArea\n                    data={{\n                        ...content[\"contact-section\"],\n                        socials: data.site.siteMetadata.socials,\n                        phone: data.site.siteMetadata?.contact?.phone,\n                        email: data.site.siteMetadata?.contact?.email,\n                        getform_url: data.site.siteMetadata?.getform_url,\n                    }}\n                />\n            </main>\n            <Footer data={{ ...data.footer }} className=\"section-separator\" />\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query ModelWhitePageQuery {\n        site {\n            ...Site\n        }\n        header: general(section: { eq: \"header-5\" }) {\n            ...Header01\n        }\n        navigation: general(section: { eq: \"menu-6\" }) {\n            menu {\n                ...Menu01\n            }\n        }\n        footer: general(section: { eq: \"footer-1\" }) {\n            ...Footer01\n        }\n        homePage(title: { eq: \"model-home\" }) {\n            content {\n                ...Content01\n            }\n        }\n    }\n`;\n\nIndexModelPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                socials: PropTypes.arrayOf(PropTypes.shape({})),\n                contact: PropTypes.shape({\n                    phone: PropTypes.string,\n                    email: PropTypes.string,\n                }),\n                getform_url: PropTypes.string,\n            }),\n        }),\n        homePage: PropTypes.shape({\n            content: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        navigation: PropTypes.shape({}),\n        header: PropTypes.shape({}),\n        footer: PropTypes.shape({}),\n    }),\n};\n\nexport default IndexModelPage;\n"],"names":["show","setShow","image","title","category","path","texts","onHide","dialogClassName","centered","id","className","type","onClick","src","alt","map","text","i","length","key","content","likeCount","useState","onKeyPress","role","tabIndex","name","ServiceCard","description","icon","defaultProps","AboutArea","hasSeparator","data","cn","images","section_title","buttons","HeroArea","headings","PortfolioArea","align","items","item","ServiceArea","logo","Date","getFullYear","copyright_text","dangerouslySetInnerHTML","__html","normalizedData","homePage","pageTitle","header","navigation","socials","site","siteMetadata","phone","contact","email","getform_url","footer"],"sourceRoot":""}