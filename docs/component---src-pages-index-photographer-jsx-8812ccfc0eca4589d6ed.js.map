{"version":3,"file":"component---src-pages-index-photographer-jsx-8812ccfc0eca4589d6ed.js","mappings":"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","sources":["webpack://inbio-gatsby/./src/components/client-card/layout-01/index.jsx","webpack://inbio-gatsby/./src/components/contact-info-card/index.jsx","webpack://inbio-gatsby/./src/containers/client/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/contact/layout-01/index.jsx","webpack://inbio-gatsby/./src/containers/hero/layout-11/index.jsx","webpack://inbio-gatsby/./src/containers/skill/layout-03/index.jsx","webpack://inbio-gatsby/./src/layouts/header/layout-01/index.jsx","webpack://inbio-gatsby/./src/pages/index-photographer.jsx"],"sourcesContent":["import React from \"react\";\nimport { ImageType } from \"@utils/types\";\nimport Image from \"@ui/image\";\nimport PropTypes from \"prop-types\";\n\nconst ClientCard = ({ image, name, path, ...rest }) => {\n    return (\n        <div className=\"main-content\" {...rest}>\n            <div className=\"inner text-center\">\n                {image?.src && (\n                    <div className=\"thumbnail\">\n                        <a href={path}>\n                            <Image src={image.src} alt={image?.alt || name} />\n                        </a>\n                    </div>\n                )}\n                <div className=\"seperator\"></div>\n                <div className=\"client-name\">\n                    <span>\n                        <a href={path}>{name}</a>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nClientCard.propTypes = {\n    image: PropTypes.shape(ImageType).isRequired,\n    name: PropTypes.string.isRequired,\n    path: PropTypes.string,\n};\n\nClientCard.defaultProps = {\n    path: \"#!\",\n};\n\nexport default ClientCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport Social, { SocialLink } from \"@ui/social\";\nimport Icon from \"@ui/icon\";\nimport cn from \"clsx\";\nimport { ImageType, SocialType } from \"@utils/types\";\n\nconst ContactInfoCard = ({\n    className,\n    image,\n    title,\n    subtitle,\n    desc,\n    phone,\n    email,\n    socials,\n}) => {\n    return (\n        <div className={cn(\"contact-about-area\", className)}>\n            {image?.src && (\n                <div className=\"thumbnail\">\n                    <Image src={image.src} alt=\"contact-img\" />\n                </div>\n            )}\n            <div className=\"title-area\">\n                {title && <h4 className=\"title\">{title}</h4>}\n                {subtitle && <span>{subtitle}</span>}\n            </div>\n            <div className=\"description\">\n                {desc && <p>{desc}</p>}\n                {phone && (\n                    <span className=\"phone\">\n                        Phone: <a href={`tel:${phone}`}>+{phone}</a>\n                    </span>\n                )}\n                {email && (\n                    <span className=\"mail\">\n                        Email: <a href={`mailto:${email}`}>{email}</a>\n                    </span>\n                )}\n            </div>\n            {socials && (\n                <div className=\"social-area\">\n                    <div className=\"name\">SIGUEME EN </div>\n                    <Social className=\"social-icone\">\n                        {socials.map((social) => (\n                            <SocialLink key={social.id} path={social.path}>\n                                <Icon name={social.icon} />\n                            </SocialLink>\n                        ))}\n                    </Social>\n                </div>\n            )}\n        </div>\n    );\n};\n\nContactInfoCard.propTypes = {\n    className: PropTypes.string,\n    image: PropTypes.shape(ImageType),\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    desc: PropTypes.string,\n    phone: PropTypes.string,\n    email: PropTypes.string,\n    socials: PropTypes.arrayOf(PropTypes.shape(SocialType)),\n};\n\nexport default ContactInfoCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionTitle from \"@components/section-title\";\nimport ClientCard from \"@components/client-card/layout-01\";\nimport { SectionTitleType, ItemType } from \"@utils/types\";\n\nconst ClientArea = ({ data, id }) => {\n    return (\n        <div\n            id={id}\n            className=\"rn-client-area rn-client-style-2 rn-section-gap section-separator\"\n        >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        {data?.section_title && (\n                            <SectionTitle\n                                data-aos=\"fade-up\"\n                                data-aos-duration=\"500\"\n                                data-aos-delay=\"100\"\n                                data-aos-once=\"true\"\n                                align=\"center\"\n                                {...data.section_title}\n                            />\n                        )}\n\n                        <div className=\"skill-style-1\">\n                            <div className=\"client-card\">\n                                {data?.items?.map((item) => (\n                                    <ClientCard\n                                        key={item.id}\n                                        image={item?.images?.[0]}\n                                        name={item.title}\n                                        data-aos=\"fade-up\"\n                                        data-aos-duration=\"500\"\n                                        data-aos-delay=\"100\"\n                                        data-aos-once=\"true\"\n                                    />\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nClientArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        section_title: PropTypes.shape(SectionTitleType),\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nClientArea.defaultProps = {\n    id: \"client\",\n};\n\nexport default ClientArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionTitle from \"@components/section-title\";\nimport ContactForm from \"@components/contact-form\";\nimport ContactInfoCard from \"@components/contact-info-card\";\nimport {\n    SectionTitleType,\n    HeadingType,\n    TextType,\n    ImageType,\n    SocialType,\n} from \"@utils/types\";\n\nconst ContactArea = ({ data, id }) => {\n    return (\n        <div\n            className=\"rn-contact-area rn-section-gap section-separator\"\n            id={id}\n        >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        {data?.section_title && (\n                            <SectionTitle\n                                {...data.section_title}\n                                align=\"center\"\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className=\"row mt--50 mt_md--40 mt_sm--40 mt-contact-sm\">\n                    <div className=\"col-lg-8 mx-auto\">\n                        <ContactInfoCard\n                            image={data?.images?.[0]}\n                            title={data?.headings?.[0].content}\n                            subtitle={data?.headings?.[1].content}\n                            desc={data?.texts?.[0].content}\n                            phone={data?.phone}\n                            email={data?.email}\n                            socials={data?.socials}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nContactArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        section_title: PropTypes.shape(SectionTitleType),\n        headings: PropTypes.arrayOf(PropTypes.shape(HeadingType)),\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n        images: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n        socials: PropTypes.arrayOf(PropTypes.shape(SocialType)),\n        phone: PropTypes.string,\n        email: PropTypes.string,\n        getform_url: PropTypes.string,\n    }),\n};\n\nContactArea.defaultProps = {\n    id: \"contacts\",\n};\n\nexport default ContactArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"@ui/icon\";\nimport Image from \"@ui/image\";\nimport Social, { SocialLink } from \"@ui/social\";\nimport { ImageType, HeadingType, TextType, SocialType } from \"@utils/types\";\n\nconst HeroArea = ({ data, id }) => {\n    return (\n        <div id={id} className=\"rn-slider-area\">\n            <div className=\"slide slider-style-4\">\n                {data?.images?.[0]?.src && (\n                    <div className=\"hero-img\">\n                        <Image\n                            src={data.images[0].src}\n                            alt={data.images[0]?.alt || \"Hero Bg\"}\n                        />\n                    </div>\n                )}\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"order-2 order-lg-1 col-lg-9 col-xl-7\">\n                            <div className=\"content\">\n                                <div className=\"inner mb_sm--80\">\n                                    {data?.headings?.[0] && (\n                                        <h1\n                                            className=\"title slide-title\"\n                                            dangerouslySetInnerHTML={{\n                                                __html: data.headings[0]\n                                                    ?.content,\n                                            }}\n                                        />\n                                    )}\n                                    {data?.texts?.[0] && (\n                                        <div>\n                                            <p className=\"description\">\n                                                {data.texts[0].content}\n                                            </p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row \">\n                                    <div className=\"col-lg-12 col-xl-6 col-md-12 col-sm-12 col-12\">\n                                        {data?.socials && (\n                                            <div className=\"social-share-inner-left\">\n                                                <span className=\"title\">\n                                                    find with me\n                                                </span>\n                                                <Social>\n                                                    {data.socials.map(\n                                                        (social) => (\n                                                            <SocialLink\n                                                                key={social.id}\n                                                                path={\n                                                                    social.path\n                                                                }\n                                                            >\n                                                                <Icon\n                                                                    name={\n                                                                        social.icon\n                                                                    }\n                                                                />\n                                                            </SocialLink>\n                                                        )\n                                                    )}\n                                                </Social>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nHeroArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        headings: PropTypes.arrayOf(PropTypes.shape(HeadingType)),\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n        socials: PropTypes.arrayOf(PropTypes.shape(SocialType)),\n        images: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n    }),\n};\n\nHeroArea.defaultProps = {\n    id: \"home\",\n};\n\nexport default HeroArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport SectionTitle from \"@components/section-title\";\nimport { ItemType, SectionTitleType } from \"@utils/types\";\n\nconst SkillArea = ({ data, id }) => {\n    return (\n        <div id={id} className=\"rn-skill-area rn-section-gap section-separator\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        {data?.section_title && (\n                            <SectionTitle\n                                data-aos=\"fade-up\"\n                                data-aos-duration=\"500\"\n                                data-aos-delay=\"100\"\n                                data-aos-once=\"true\"\n                                className=\"text-center\"\n                                {...data.section_title}\n                            />\n                        )}\n                        <div className=\"mt_md--40 mt_sm--40\">\n                            <ul className=\"skill-style-1\">\n                                {data?.items?.map((item) => (\n                                    <li\n                                        key={item.id}\n                                        data-aos=\"fade-up\"\n                                        data-aos-duration=\"500\"\n                                        data-aos-delay=\"100\"\n                                        data-aos-once=\"true\"\n                                        title={item.title}\n                                    >\n                                        {item?.images?.[0]?.src && (\n                                            <Image\n                                                src={item.images[0].src}\n                                                alt={\n                                                    item.images[0]?.alt ||\n                                                    item.title\n                                                }\n                                            />\n                                        )}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nSkillArea.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        section_title: PropTypes.shape(SectionTitleType),\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nSkillArea.defaultProps = {\n    id: \"skill\",\n};\n\nexport default SkillArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"clsx\";\nimport Logo from \"@components/logo\";\nimport MainMenu from \"@components/main-menu\";\nimport PopupMenu from \"@components/popup-menu\";\nimport BurgerButton from \"@ui/burger-button\";\nimport Button from \"@ui/button\";\nimport { useSticky, useOffcanvas } from \"@hooks\";\nimport { ImageType, ButtonType, MenuType, SocialType } from \"@utils/types\";\n\nconst Header = ({ className, data }) => {\n    const sticky = useSticky();\n    const { offcanvas, offcanvasHandler } = useOffcanvas();\n\n    return (\n        <>\n            <header\n                className={cn(\n                    \"rn-header haeder-default black-logo-version header--fixed header--sticky\",\n                    sticky && \"sticky\",\n                    className\n                )}\n            >\n                <div className=\"header-wrapper rn-popup-mobile-menu m--0\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-lg-2 col-6\">\n                            <div className=\"header-left\">\n                                {data?.logo?.[0]?.src && (\n                                    <Logo\n                                        image={data.logo[0]}\n                                        className=\"light-logo\"\n                                    />\n                                )}\n                                {data?.logo?.[1]?.src && (\n                                    <Logo\n                                        image={data.logo[1]}\n                                        className=\"dark-logo\"\n                                    />\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-10 col-6\">\n                            <div className=\"header-center\">\n                                {data?.menu && (\n                                    <MainMenu\n                                        className=\"d-none d-xl-block\"\n                                        menus={data.menu}\n                                    />\n                                )}\n                                <div className=\"header-right\">\n                                    {data?.button && (\n                                        <Button\n                                            path={data.button?.path}\n                                            className={data.button?.className}\n                                        >\n                                            <span>{data.button?.content}</span>\n                                        </Button>\n                                    )}\n\n                                    <BurgerButton\n                                        className=\"d-block d-xl-none\"\n                                        onClick={offcanvasHandler}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n\n            <PopupMenu\n                isOpen={offcanvas}\n                onClick={offcanvasHandler}\n                menus={data?.menu}\n                socials={data?.socials}\n                slogan={data?.slogan}\n                logo={data?.logo?.[1]}\n            />\n        </>\n    );\n};\n\nHeader.propTypes = {\n    className: PropTypes.string,\n    data: PropTypes.shape({\n        logo: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n        button: PropTypes.shape(ButtonType),\n        menu: PropTypes.arrayOf(PropTypes.shape(MenuType)),\n        socials: PropTypes.arrayOf(PropTypes.shape(SocialType)),\n        slogan: PropTypes.string,\n    }),\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { normalizedData } from \"@utils\";\nimport Layout from \"@layout\";\nimport Header from \"@layout/header/layout-01\";\nimport Footer from \"@layout/footer/layout-02\";\nimport HeroArea from \"@containers/hero/layout-11\";\nimport AboutArea from \"@containers/about/layout-02\";\nimport SkillArea from \"@containers/skill/layout-03\";\nimport ServicesArea from \"@containers/service/layout-01\";\nimport PortfolioArea from \"@containers/portfolio/layout-06\";\nimport ClientArea from \"@containers/client/layout-03\";\nimport TestimonialArea from \"@containers/testimonial/layout-03\";\nimport PricingArea from \"@containers/pricing/layout-02\";\nimport BlogArea from \"@containers/blog/layout-01\";\nimport ContactArea from \"@containers/contact/layout-01\";\n\nconst IndexPhotographerPage = ({ data }) => {\n    const content = normalizedData(data?.homePage?.content || []);\n    return (\n        <Layout pageTitle=\"Home Photographer\">\n            <Header\n                data={{\n                    ...data.header,\n                    ...data.navigation,\n                    socials: data.site.siteMetadata.socials,\n                }}\n            />\n            <main className=\"main-page-wrapper\">\n                <HeroArea\n                    data={{\n                        ...content[\"hero-section\"],\n                        socials: data.site.siteMetadata.socials,\n                    }}\n                />\n                <AboutArea data={content[\"about-section\"]} />\n                <SkillArea data={content[\"skill-section\"]} />\n                <ServicesArea data={content[\"service-section\"]} />\n                <PortfolioArea data={content[\"portfolio-section\"]} />\n                <ClientArea data={content[\"client-section\"]} />\n                <TestimonialArea data={content[\"testimonial-section\"]} />\n                <PricingArea data={content[\"pricing-section\"]} />\n                <BlogArea\n                    data={{\n                        ...content[\"blog-section\"],\n                        blogs: data?.allArticle?.nodes,\n                    }}\n                />\n                <ContactArea\n                    data={{\n                        ...content[\"contact-section\"],\n                        socials: data.site.siteMetadata.socials,\n                        phone: data.site.siteMetadata?.contact?.phone,\n                        email: data.site.siteMetadata?.contact?.email,\n                        getform_url: data.site.siteMetadata?.getform_url,\n                    }}\n                />\n            </main>\n            <Footer\n                data={{\n                    ...data.footer,\n                    socials: data.site.siteMetadata.socials,\n                }}\n                className=\"section-separator\"\n            />\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query PhotographerPageQuery {\n        site {\n            ...Site\n        }\n        header: general(section: { eq: \"header-3\" }) {\n            ...Header01\n        }\n        navigation: general(section: { eq: \"menu-7\" }) {\n            menu {\n                ...Menu01\n            }\n        }\n        footer: general(section: { eq: \"footer-2\" }) {\n            ...Footer02\n        }\n        homePage(title: { eq: \"photographer-home\" }) {\n            content {\n                ...Content01\n            }\n        }\n        allArticle(limit: 3) {\n            nodes {\n                ...Article\n            }\n        }\n    }\n`;\n\nIndexPhotographerPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                socials: PropTypes.arrayOf(PropTypes.shape({})),\n                contact: PropTypes.shape({\n                    phone: PropTypes.string,\n                    email: PropTypes.string,\n                }),\n                getform_url: PropTypes.string,\n            }),\n        }),\n        homePage: PropTypes.shape({\n            content: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        allArticle: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        navigation: PropTypes.shape({}),\n        header: PropTypes.shape({}),\n        footer: PropTypes.shape({}),\n    }),\n};\n\nexport default IndexPhotographerPage;\n"],"names":["ClientCard","image","name","path","rest","className","src","href","alt","defaultProps","title","subtitle","desc","phone","email","socials","cn","map","social","key","id","icon","ClientArea","data","section_title","align","items","item","images","ContactArea","headings","content","texts","HeroArea","dangerouslySetInnerHTML","__html","SkillArea","sticky","useSticky","offcanvas","offcanvasHandler","useOffcanvas","logo","menu","menus","button","onClick","isOpen","slogan","normalizedData","homePage","pageTitle","header","navigation","site","siteMetadata","blogs","allArticle","nodes","contact","getform_url","footer"],"sourceRoot":""}