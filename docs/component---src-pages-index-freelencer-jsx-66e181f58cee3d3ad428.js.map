{"version":3,"file":"component---src-pages-index-freelencer-jsx-66e181f58cee3d3ad428.js","mappings":"8KA8FA,IAtFuB,IAQhB,IARiB,KACpBA,EAAI,QACJC,EAAO,MACPC,EAAK,MACLC,EAAK,SACLC,EAAQ,KACRC,EAAI,MACJC,GACH,EACG,OACI,gBAAC,IAAK,CACFN,KAAMA,EACNO,OAAQ,IAAMN,GAAQ,GACtBO,gBAAgB,YAChB,kBAAgB,qCAChBC,UAAU,GAEV,gBAAC,WAAY,KACT,gBAAC,UAAW,CACRC,GAAG,qCACHC,UAAU,mBAAiB,wBAI/B,0BACIC,KAAK,SACLD,UAAU,QACV,eAAa,QACb,aAAW,QACXE,QAAS,IAAMZ,GAAQ,IAEvB,wBAAM,cAAY,QACd,gBAAC,IAAC,SAId,gBAAC,SAAU,KACP,uBAAKU,UAAU,0BACX,uBAAKA,UAAU,YACX,uBAAKA,UAAU,8BACVT,aAAK,EAALA,EAAOY,MACJ,uBAAKH,UAAU,SACX,gBAAC,IAAK,CACFG,IAAKZ,EAAMY,IACXC,KAAKb,aAAK,EAALA,EAAOa,MAAOZ,EACnBQ,UAAU,aAO9B,uBAAKA,UAAU,YACX,uBAAKA,UAAU,gBACX,0BACI,0CAAkBP,GAAgB,IAAED,GAEvCG,aAAK,EAALA,EAAOU,KAAI,CAACC,EAAMC,IACf,qBACIP,UACIO,IAAMZ,EAAMa,OAAS,EAAI,SAAW,GAExCC,IAAKF,GAEJD,EAAKI,WAGd,uBAAKV,UAAU,4BAK3B,C,gHC3ET,MAAMW,EAAW,IAAmB,IAAlB,SAAEC,GAAU,EACjC,OAAO,sBAAIZ,UAAU,aAAaY,EAAc,EAOvCC,EAAe,IAAkC,IAAjC,SAAED,EAAQ,KAAElB,KAASoB,GAAM,EACpD,OACI,0BACKpB,GACG,gBAAC,IAAM,CAACA,KAAMA,GACTkB,EAAQ,IAAE,gBAAC,IAAU,QAG5BlB,GACE,wCAAQO,KAAK,UAAaa,GACrBF,EAAQ,IAAE,gBAAC,IAAU,OAG7B,C,8GCTb,MAZkB,IAA8B,IAA3BrB,OAAO,IAAEY,EAAG,IAAEC,IAAO,EACtC,OACI,0BACI,gBAAC,IAAK,CAACD,IAAKA,EAAKC,IAAKA,GAAO,UAC5B,ECIb,MAVmB,IAAmB,IAAlB,SAAEQ,GAAU,EAC5B,OAAO,sBAAIZ,UAAU,gCAAgCY,EAAc,C,+CCAvE,MAAMG,EAAS,IAAmC,IAAlC,SAAEH,EAAQ,UAAEZ,EAAS,IAAEgB,GAAK,EACxC,OACI,uBACIhB,WAAWiB,EAAAA,EAAAA,GAAG,6BAA8BjB,GAC5CkB,MAAO,CAAEF,QAERJ,EACC,EAUdG,EAAOI,aAAe,CAClBH,IAAK,SAGT,K,6CCCA,IAtBkB,IAAe,IAAD,MAAb,KAAEI,GAAM,EACvB,OACI,uBAAKpB,UAAU,gCACX,uBAAKA,UAAU,UACVoB,aAAI,EAAJA,EAAM5B,QAAS,sBAAIQ,UAAU,SAASoB,EAAK5B,OAC3C4B,SAAW,QAAP,EAAJA,EAAMzB,aAAK,WAAP,EAAJ,EAAaU,KAAI,CAACC,EAAMC,IACrB,qBAAGE,IAAKF,EAAGP,UAAU,cAChBM,EAAKI,YAIhB,C,iGCwBd,MAjCiB,IAAgD,IAA/C,MAAElB,EAAK,MAAED,EAAK,KAAE8B,EAAI,QAAEX,EAAO,KAAEY,EAAI,GAAEvB,GAAI,EACvD,MAAM,EAACV,EAAK,EAACC,IAAWiC,EAAAA,EAAAA,WAAS,GACjC,OACI,gCACI,gBAAC,IAAY,CACTrB,QAAS,IAAMZ,GAAQ,GACvBkC,WAAY,IAAMlC,GAAQ,IAEzBE,GAEL,gBAAC,IAAS,CACNH,KAAMA,EACNC,QAASA,EACTE,MAAOA,EACP6B,KAAMA,EACN9B,MAAOA,EACPmB,QAASA,EACTY,KAAMA,EACNvB,GAAIA,IAET,ECkBX,MAtCiB,IAAe,IAAD,MAAb,KAAEqB,GAAM,EACtB,OACI,uBACI,WAAS,YACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OACdpB,UAAU,kDAEV,uBAAKA,UAAU,UACVoB,aAAI,EAAJA,EAAM5B,QAAS,sBAAIQ,UAAU,SAASoB,EAAK5B,QAC3C4B,aAAI,EAAJA,EAAMK,QACH,gBAAC,EAAAC,EAAQ,KACM,QADN,EACJN,EAAKK,aAAK,aAAV,EAAYpB,KAAKsB,GACd,gBAAC,EAAQ,CACLlB,IAAKkB,EAAKL,KACVvB,GAAI4B,EAAK5B,GACTP,MAAOmC,EAAKnC,MACZ8B,KAAMK,EAAKL,KACXD,KAAMM,EAAKN,KACX9B,MAAOoC,EAAKpC,MACZmB,QAASiB,EAAKjB,cAMhC,C,+CCNd,IAvBoB,IAAe,IAAd,KAAEU,GAAM,EACzB,OACI,uBACI,WAAS,YACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OACdpB,UAAU,kCAEV,uBAAKA,UAAU,SACX,sBAAIA,UAAU,SAAO,mBACrB,gBAAC,IAAW,CAAC4B,IAAKR,EAAKS,eAEzB,C,2ECyCd,IAnDiB,IAAe,IAAD,oBAAb,KAAET,GAAM,EACtB,OACI,uBAAKpB,UAAU,8CACX,gBAAC,IAAM,CAACA,UAAU,oBAAoBgB,IAAI,SACtC,uBAAKhB,UAAU,wCACVoB,SAAY,QAAR,EAAJA,EAAMU,cAAM,OAAK,QAAL,EAAZ,EAAe,UAAE,WAAb,EAAJ,EAAmB3B,MAChB,uBAAKH,UAAU,aACX,gBAAC,IAAK,CACFG,IAAKiB,EAAKU,OAAO,GAAG3B,IACpBC,KACkB,QAAd,EAAAgB,EAAKU,OAAO,UAAE,aAAd,EAAgB1B,MAAO,wBAMvC,uBAAKJ,UAAU,6BACVoB,SAAc,QAAV,EAAJA,EAAMW,gBAAQ,WAAV,EAAJ,EAAiB,KACd,sBACI/B,UAAU,QACVgC,wBAAyB,CACrBC,OAAwB,QAAlB,EAAEb,EAAKW,SAAS,UAAE,aAAhB,EAAkBrB,YAIrCU,SAAW,QAAP,EAAJA,EAAMzB,aAAK,WAAP,EAAJ,EAAc,KACX,qBAAGK,UAAU,QAAqB,QAAf,EAAEoB,EAAKzB,MAAM,UAAE,aAAb,EAAee,UAG5C,uBAAKV,UAAU,qEACVoB,SAAa,QAAT,EAAJA,EAAMc,eAAO,WAAT,EAAJ,EAAe7B,KAAI,QAAC,GAAEN,EAAE,KAAEL,EAAI,QAAEgB,GAAS,SACtC,gBAAC,IAAM,CAACD,IAAKV,EAAIL,KAAMA,GACnB,4BAAOgB,GACF,OAKvB,C,mGCRd,MA/BsB,IAA8C,IAA7C,MAAElB,EAAK,SAAEC,EAAQ,MAAEF,EAAK,KAAEG,EAAI,MAAEC,GAAO,EAC1D,MAAM,EAACN,EAAK,EAACC,IAAWiC,EAAAA,EAAAA,WAAS,GACjC,OACI,gCACI,gBAAC,IAAY,CACTrB,QAAS,IAAMZ,GAAQ,GACvBkC,WAAY,IAAMlC,GAAQ,IAEzBE,GAEL,gBAAC,IAAc,CACXH,KAAMA,EACNC,QAASA,EACTE,MAAOA,EACPC,SAAUA,EACVF,MAAOA,EACPI,MAAOA,EACPD,KAAMA,IAEX,ECkBX,MArCsB,IAAe,IAAD,MAAb,KAAE0B,GAAM,EAC3B,OACI,uBACI,WAAS,YACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OACdpB,UAAU,uDAEV,uBAAKA,UAAU,UACVoB,aAAI,EAAJA,EAAM5B,QAAS,sBAAIQ,UAAU,SAASoB,EAAK5B,QAC3C4B,aAAI,EAAJA,EAAMe,QACH,gBAAC,EAAAT,EAAQ,KACM,QADN,EACJN,EAAKe,aAAK,aAAV,EAAY9B,KAAK+B,IAAI,aAClB,gBAAC,EAAa,CACV3B,IAAK2B,EAAKrC,GACVP,MAAO4C,EAAK5C,MACZC,SAAU2C,EAAK3C,SACfF,MAAkB,QAAb,EAAE6C,EAAKN,cAAM,aAAX,EAAc,GACrBnC,MAAOyC,EAAKzC,MACZD,KAAM0C,EAAK1C,MACb,MAKhB,C,uDCKd,IAhCoB,IAAe,IAAD,MAAb,KAAE0B,GAAM,EACzB,OACI,uBACI,WAAS,YACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OACdpB,UAAU,mDAEV,uBAAKA,UAAU,UACVoB,aAAI,EAAJA,EAAM5B,QAAS,sBAAIQ,UAAU,SAASoB,EAAK5B,QAC3C4B,aAAI,EAAJA,EAAMe,QACH,gBAAC,EAAAT,EAAQ,KACM,QADN,EACJN,EAAKe,aAAK,aAAV,EAAY9B,KAAK+B,GACd,gBAAC,IAAY,CAAC3B,IAAK2B,EAAKrC,GAAIL,KAAM0C,EAAK1C,MAClC0C,EAAK5C,WAMxB,C,uDC+Bd,IApDkB,IAAe,IAAD,oBAAb,KAAE4B,GAAM,EACvB,OACI,uBAAKpB,UAAU,gCACX,uBAAKA,UAAU,gBACVoB,aAAI,EAAJA,EAAM5B,QAAS,sBAAIQ,UAAU,SAASoB,EAAK5B,QAC3C4B,SAAW,QAAP,EAAJA,EAAMiB,aAAK,WAAP,EAAJ,EAAc,KACX,uBAAKrC,UAAU,8BACG,QAAb,EAAAoB,EAAKiB,MAAM,UAAE,aAAb,EAAe7C,QACZ,wBAAMQ,UAAU,SAASoB,EAAKiB,MAAM,GAAG7C,QAE7B,QAAb,EAAA4B,EAAKiB,MAAM,UAAE,aAAb,EAAeF,QACZ,gBAAC,IAAU,KACa,QADb,EACNf,EAAKiB,MAAM,GAAGF,aAAK,aAAnB,EAAqB9B,KAAK+B,IAAI,aAC3B,gBAAC,IAAS,CACN3B,IAAK2B,EAAKrC,GACVR,MAAkB,QAAb,EAAE6C,EAAKN,cAAM,aAAX,EAAc,IACvB,OAOrBV,SAAW,QAAP,EAAJA,EAAMiB,aAAK,WAAP,EAAJ,EAAc,KACX,uBAAKrC,UAAU,4DACG,QAAb,EAAAoB,EAAKiB,MAAM,UAAE,aAAb,EAAe7C,QACZ,wBAAMQ,UAAU,SAASoB,EAAKiB,MAAM,GAAG7C,QAE7B,QAAb,EAAA4B,EAAKiB,MAAM,UAAE,aAAb,EAAeF,QACZ,gBAAC,IAAU,KACa,QADb,EACNf,EAAKiB,MAAM,GAAGF,aAAK,aAAnB,EAAqB9B,KAAK+B,IAAI,aAC3B,gBAAC,IAAS,CACN3B,IAAK2B,EAAKrC,GACVR,MAAkB,QAAb,EAAE6C,EAAKN,cAAM,aAAX,EAAc,IACvB,OAOxB,C,sFCRd,MAjCoB,IAA0C,IAAzC,MAAEvC,EAAK,MAAEC,EAAK,YAAE8C,EAAW,KAAEC,GAAM,EACpD,OACI,uBAAKvC,UAAU,qBACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,cACVT,aAAK,EAALA,EAAOY,MACJ,uBAAKH,UAAU,kBACX,gBAAC,IAAK,CAACG,IAAKZ,EAAMY,IAAKC,KAAKb,aAAK,EAALA,EAAOa,MAAOZ,MAItD,sBAAIQ,UAAU,aACV,wBAAMA,UAAU,sBAAsBR,GAAc,IACnD8C,IAGT,uBAAKtC,UAAU,oBACX,qBACIA,UAAU,cACVgC,wBAAyB,CAAEC,OAAQM,MAGzC,E,UCrBd,MAAMC,EAAgB,CAClBC,QAAQ,EACRC,MAAM,GA6CV,MA1CwB,IAAe,IAAD,MAAb,KAAEtB,GAAM,EAC7B,OACI,uBACI,WAAS,YACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OACdpB,UAAU,0DAEV,uBAAKA,UAAU,UACVoB,aAAI,EAAJA,EAAM5B,QAAS,sBAAIQ,UAAU,SAASoB,EAAK5B,QAC3C4B,aAAI,EAAJA,EAAMe,QACH,gBAAC,IAAM,CACHQ,QAASH,EACTI,SAAS,cACTC,SAAS,eACT7C,UAAU,2HAEC,QAFwH,EAElIoB,EAAKe,aAAK,aAAV,EAAY9B,KAAK+B,IAAI,aAClB,gBAAC,IAAU,CAAC3B,IAAK2B,EAAKrC,IAClB,gBAAC,EAAW,CACRR,MAAO6C,SAAY,QAAR,EAAJA,EAAMN,cAAM,WAAR,EAAJ,EAAe,GACtBtC,MAAO4C,EAAK5C,MACZ8C,YAAaF,EAAKE,YAClBC,KAAMH,EAAKU,cAEN,MAK3B,C,+IC2Dd,UAvF4B,IAAe,IAAD,UAAb,KAAE1B,GAAM,EACjC,MAAMV,GAAUqC,EAAAA,EAAAA,iBAAe3B,SAAc,QAAV,EAAJA,EAAM4B,gBAAQ,WAAV,EAAJ,EAAgBtC,UAAW,IAC1D,OACI,gBAAC,IAAM,CAACuC,UAAU,mBACd,wBAAMjD,UAAU,qBACZ,uBAAKA,UAAU,kBACX,uBAAKA,UAAU,aACX,uBAAKA,UAAU,iCACX,uBAAKA,UAAU,YACX,gBAAC,IAAQ,CAACoB,KAAMV,EAAQ,mBAE5B,uBAAKV,UAAU,YACX,uBAAKA,UAAU,uBACX,gBAAC,IAAS,CACNoB,KAAMV,EAAQ,mBAElB,gBAAC,IAAS,CACNU,KAAMV,EAAQ,mBAElB,gBAAC,IAAY,CACTU,KAAMV,EAAQ,qBAElB,gBAAC,IAAa,CACVU,KAAMV,EAAQ,uBAElB,gBAAC,IAAQ,CACLU,KAAM,IACCV,EAAQ,gBACXe,MAAOL,SAAgB,QAAZ,EAAJA,EAAM8B,kBAAU,WAAZ,EAAJ,EAAkBC,SAGjC,gBAAC,IAAe,CACZ/B,KAAMV,EAAQ,yBAElB,gBAAC,IAAW,CACRU,KAAM,CACFS,YAC0B,QADf,EACPT,EAAKgC,KAAKC,oBAAY,aAAtB,EACMxB,qBASrC,C","sources":["webpack://inbio-gatsby/./src/components/modal-portfolio/index.jsx","webpack://inbio-gatsby/./src/components/ui/card-list/index.jsx","webpack://inbio-gatsby/./src/components/ui/skill-share/skill-item.jsx","webpack://inbio-gatsby/./src/components/ui/skill-share/index.jsx","webpack://inbio-gatsby/./src/components/ui/sticky/index.jsx","webpack://inbio-gatsby/./src/containers/about/layout-03/index.jsx","webpack://inbio-gatsby/./src/components/blog-card/layout-02/index.jsx","webpack://inbio-gatsby/./src/containers/blog/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/contact/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/hero/layout-10/index.jsx","webpack://inbio-gatsby/./src/components/portfolio-card/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/portfolio/layout-05/index.jsx","webpack://inbio-gatsby/./src/containers/service/layout-05/index.jsx","webpack://inbio-gatsby/./src/containers/skill/layout-02/index.jsx","webpack://inbio-gatsby/./src/components/testimonial/layout-02/index.jsx","webpack://inbio-gatsby/./src/containers/testimonial/layout-02/index.jsx","webpack://inbio-gatsby/./src/pages/index-freelencer.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { X, ThumbsUp, ChevronRight } from \"react-feather\";\nimport Image from \"@ui/image\";\nimport Button from \"@ui/button\";\nimport { ImageType, TextType } from \"@utils/types\";\n\nconst PortfolioModal = ({\n    show,\n    setShow,\n    image,\n    title,\n    category,\n    path,\n    texts,\n}) => {\n    return (\n        <Modal\n            show={show}\n            onHide={() => setShow(false)}\n            dialogClassName=\"modal-90w\"\n            aria-labelledby=\"example-custom-modal-styling-title\"\n            centered={true}\n        >\n            <Modal.Header>\n                <Modal.Title\n                    id=\"example-custom-modal-styling-title\"\n                    className=\"visually-hidden\"\n                >\n                    Custom Modal Styling\n                </Modal.Title>\n                <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={() => setShow(false)}\n                >\n                    <span aria-hidden=\"true\">\n                        <X />\n                    </span>\n                </button>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"row align-items-center\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"portfolio-popup-thumbnail\">\n                            {image?.src && (\n                                <div className=\"image\">\n                                    <Image\n                                        src={image.src}\n                                        alt={image?.alt || title}\n                                        className=\"w-100\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                        <div className=\"text-content\">\n                            <h3>\n                                <span>Featured - {category}</span> {title}\n                            </h3>\n                            {texts?.map((text, i) => (\n                                <p\n                                    className={\n                                        i !== texts.length - 1 ? \"mb--30\" : \"\"\n                                    }\n                                    key={i}\n                                >\n                                    {text.content}\n                                </p>\n                            ))}\n                            <div className=\"button-group mt--20\"></div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nPortfolioModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    setShow: PropTypes.func.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n};\n\nexport default PortfolioModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ArrowRight } from \"react-feather\";\nimport Anchor from \"@ui/anchor\";\n\nexport const CardList = ({ children }) => {\n    return <ul className=\"card-list\">{children}</ul>;\n};\n\nCardList.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport const CardListItem = ({ children, path, ...rest }) => {\n    return (\n        <li>\n            {path && (\n                <Anchor path={path}>\n                    {children} <ArrowRight />\n                </Anchor>\n            )}\n            {!path && (\n                <button type=\"button\" {...rest}>\n                    {children} <ArrowRight />\n                </button>\n            )}\n        </li>\n    );\n};\n\nCardListItem.propTypes = {\n    children: PropTypes.node.isRequired,\n    path: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport { ImageType } from \"@utils/types\";\n\nconst SkillItem = ({ image: { src, alt } }) => {\n    return (\n        <li>\n            <Image src={src} alt={alt || \"skill\"} />\n        </li>\n    );\n};\n\nSkillItem.propTypes = {\n    image: PropTypes.shape(ImageType).isRequired,\n};\n\nexport default SkillItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SkillShare = ({ children }) => {\n    return <ul className=\"skill-share d-flex liststyle\">{children}</ul>;\n};\n\nSkillShare.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport { default as SkillItem } from \"./skill-item\";\n\nexport default SkillShare;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"clsx\";\n\nconst Sticky = ({ children, className, top }) => {\n    return (\n        <div\n            className={cn(\"position-sticky sticky-top\", className)}\n            style={{ top }}\n        >\n            {children}\n        </div>\n    );\n};\n\nSticky.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    top: PropTypes.string,\n};\n\nSticky.defaultProps = {\n    top: \"120px\",\n};\n\nexport default Sticky;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextType, SectionTitleType } from \"@utils/types\";\n\nconst AboutArea = ({ data }) => {\n    return (\n        <div className=\"rn-about-area section-height\">\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.texts?.map((text, i) => (\n                    <p key={i} className=\"about-disc\">\n                        {text.content}\n                    </p>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nAboutArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n    }),\n};\n\nexport default AboutArea;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardListItem } from \"@ui/card-list\";\nimport BlogModal from \"@components/modal-blog\";\nimport { ImageType } from \"@utils/types\";\n\nconst BlogCard = ({ title, image, date, content, slug, id }) => {\n    const [show, setShow] = useState(false);\n    return (\n        <>\n            <CardListItem\n                onClick={() => setShow(true)}\n                onKeyPress={() => setShow(true)}\n            >\n                {title}\n            </CardListItem>\n            <BlogModal\n                show={show}\n                setShow={setShow}\n                title={title}\n                date={date}\n                image={image}\n                content={content}\n                slug={slug}\n                id={id}\n            />\n        </>\n    );\n};\n\nBlogCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    date: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n\nexport default BlogCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardList } from \"@ui/card-list\";\nimport BlogCard from \"@components/blog-card/layout-02\";\nimport { BlogType } from \"@utils/types\";\n\nconst BlogArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-blog-area single-card-sticky section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.blogs && (\n                    <CardList>\n                        {data.blogs?.map((blog) => (\n                            <BlogCard\n                                key={blog.slug}\n                                id={blog.id}\n                                title={blog.title}\n                                slug={blog.slug}\n                                date={blog.date}\n                                image={blog.image}\n                                content={blog.content}\n                            />\n                        ))}\n                    </CardList>\n                )}\n            </div>\n        </div>\n    );\n};\n\nBlogArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        blogs: PropTypes.arrayOf(PropTypes.shape(BlogType)),\n    }),\n};\n\nexport default BlogArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"@components/contact-form\";\n\nconst ContactArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-contact-area section-height\"\n        >\n            <div className=\"inner\">\n                <h5 className=\"title\">Contact With Me</h5>\n                <ContactForm url={data.getform_url} />\n            </div>\n        </div>\n    );\n};\n\nContactArea.propTypes = {\n    data: PropTypes.shape({\n        getform_url: PropTypes.string,\n    }),\n};\n\nexport default ContactArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport Button from \"@ui/button\";\nimport Sticky from \"@ui/sticky\";\nimport { HeadingType, TextType, ButtonType, ImageType } from \"@utils/types\";\n\nconst HeroArea = ({ data }) => {\n    return (\n        <div className=\"d-flex flex-wrap align-content-start h-100\">\n            <Sticky className=\"sticky-top-slider\" top=\"200px\">\n                <div className=\"banner-details-wrapper-sticky slide\">\n                    {data?.images?.[0]?.src && (\n                        <div className=\"thumbnail\">\n                            <Image\n                                src={data.images[0].src}\n                                alt={\n                                    data.images[0]?.alt || \"Personal Portfolio\"\n                                }\n                            />\n                        </div>\n                    )}\n\n                    <div className=\"banner-title-area pt--30\">\n                        {data?.headings?.[0] && (\n                            <h1\n                                className=\"title\"\n                                dangerouslySetInnerHTML={{\n                                    __html: data.headings[0]?.content,\n                                }}\n                            />\n                        )}\n                        {data?.texts?.[0] && (\n                            <p className=\"disc\">{data.texts[0]?.content}</p>\n                        )}\n                    </div>\n                    <div className=\"button-group text-center text-md-start pt--60 pt_md--40 pt_sm--40\">\n                        {data?.buttons?.map(({ id, path, content }) => (\n                            <Button key={id} path={path}>\n                                <span>{content}</span>\n                            </Button>\n                        ))}\n                    </div>\n                </div>\n            </Sticky>\n        </div>\n    );\n};\n\nHeroArea.propTypes = {\n    data: PropTypes.shape({\n        headings: PropTypes.arrayOf(PropTypes.shape(HeadingType)),\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n        images: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n        buttons: PropTypes.arrayOf(PropTypes.shape(ButtonType)),\n    }),\n};\n\nexport default HeroArea;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ImageType, TextType } from \"@utils/types\";\nimport { CardListItem } from \"@ui/card-list\";\nimport PortfolioModal from \"@components/modal-portfolio\";\n\nconst PortfolioCard = ({ title, category, image, path, texts }) => {\n    const [show, setShow] = useState(false);\n    return (\n        <>\n            <CardListItem\n                onClick={() => setShow(true)}\n                onKeyPress={() => setShow(true)}\n            >\n                {title}\n            </CardListItem>\n            <PortfolioModal\n                show={show}\n                setShow={setShow}\n                title={title}\n                category={category}\n                image={image}\n                texts={texts}\n                path={path}\n            />\n        </>\n    );\n};\n\nPortfolioCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    path: PropTypes.string.isRequired,\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n};\n\nexport default PortfolioCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardList } from \"@ui/card-list\";\nimport PortfolioCard from \"@components/portfolio-card/layout-03\";\nimport { ItemType } from \"@utils/types\";\n\nconst PortfolioArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-portfolio-area single-card-sticky section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.items && (\n                    <CardList>\n                        {data.items?.map((item) => (\n                            <PortfolioCard\n                                key={item.id}\n                                title={item.title}\n                                category={item.category}\n                                image={item.images?.[0]}\n                                texts={item.texts}\n                                path={item.path}\n                            />\n                        ))}\n                    </CardList>\n                )}\n            </div>\n        </div>\n    );\n};\n\nPortfolioArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nexport default PortfolioArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardList, CardListItem } from \"@ui/card-list\";\nimport { ItemType } from \"@utils/types\";\n\nconst ServiceArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-skill-area single-card-sticky section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.items && (\n                    <CardList>\n                        {data.items?.map((item) => (\n                            <CardListItem key={item.id} path={item.path}>\n                                {item.title}\n                            </CardListItem>\n                        ))}\n                    </CardList>\n                )}\n            </div>\n        </div>\n    );\n};\n\nServiceArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nexport default ServiceArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SkillShare, { SkillItem } from \"@ui/skill-share\";\nimport { InnerType } from \"@utils/types\";\n\nconst SkillArea = ({ data }) => {\n    return (\n        <div className=\"rn-skill-area section-height\">\n            <div className=\"inner slide\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.inner?.[0] && (\n                    <div className=\"skill-share-inner pt--100\">\n                        {data.inner[0]?.title && (\n                            <span className=\"title\">{data.inner[0].title}</span>\n                        )}\n                        {data.inner[0]?.items && (\n                            <SkillShare>\n                                {data.inner[0].items?.map((item) => (\n                                    <SkillItem\n                                        key={item.id}\n                                        image={item.images?.[0]}\n                                    />\n                                ))}\n                            </SkillShare>\n                        )}\n                    </div>\n                )}\n\n                {data?.inner?.[1] && (\n                    <div className=\"skill-share-inner skill-share-inner-width margin-top-25\">\n                        {data.inner[1]?.title && (\n                            <span className=\"title\">{data.inner[1].title}</span>\n                        )}\n                        {data.inner[1]?.items && (\n                            <SkillShare>\n                                {data.inner[1].items?.map((item) => (\n                                    <SkillItem\n                                        key={item.id}\n                                        image={item.images?.[0]}\n                                    />\n                                ))}\n                            </SkillShare>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nSkillArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        inner: PropTypes.arrayOf(PropTypes.shape(InnerType)),\n    }),\n};\n\nexport default SkillArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport { ImageType } from \"@utils/types\";\n\nconst Testimonial = ({ image, title, designation, desc }) => {\n    return (\n        <div className=\"testimonial-inner\">\n            <div className=\"testimonial-header\">\n                <div className=\"thumbnail\">\n                    {image?.src && (\n                        <div className=\"card-thumbnail\">\n                            <Image src={image.src} alt={image?.alt || title} />\n                        </div>\n                    )}\n                </div>\n                <h5 className=\"ts-header\">\n                    <span className=\"text-color-primary\">{title}</span>{\" \"}\n                    {designation}\n                </h5>\n            </div>\n            <div className=\"testimonial-body\">\n                <p\n                    className=\"discription\"\n                    dangerouslySetInnerHTML={{ __html: desc }}\n                />\n            </div>\n        </div>\n    );\n};\n\nTestimonial.propTypes = {\n    image: PropTypes.shape(ImageType),\n    title: PropTypes.string,\n    designation: PropTypes.string,\n    desc: PropTypes.string.isRequired,\n};\n\nexport default Testimonial;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Testimonial from \"@components/testimonial/layout-02\";\nimport Slider, { SliderItem } from \"@ui/slider\";\nimport { ItemType } from \"@utils/types\";\n\nconst sliderOptions = {\n    arrows: true,\n    dots: true,\n};\n\nconst TestimonialArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-testimonial-area testimonial-style-2 section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.items && (\n                    <Slider\n                        options={sliderOptions}\n                        prevIcon=\"ChevronLeft\"\n                        nextIcon=\"ChevronRight\"\n                        className=\"rn-testimonial-carousel testimonial-item-one rn-slick-dot-style dot-position-left slick-arrow-style-one arrow-top-align\"\n                    >\n                        {data.items?.map((item) => (\n                            <SliderItem key={item.id}>\n                                <Testimonial\n                                    image={item?.images?.[0]}\n                                    title={item.title}\n                                    designation={item.designation}\n                                    desc={item.description}\n                                />\n                            </SliderItem>\n                        ))}\n                    </Slider>\n                )}\n            </div>\n        </div>\n    );\n};\n\nTestimonialArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nexport default TestimonialArea;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { normalizedData } from \"@utils\";\nimport Layout from \"@layout\";\nimport HeroArea from \"@containers/hero/layout-10\";\nimport AboutArea from \"@containers/about/layout-03\";\nimport SkillArea from \"@containers/skill/layout-02\";\nimport ServicesArea from \"@containers/service/layout-05\";\nimport PortfolioArea from \"@containers/portfolio/layout-05\";\nimport BlogArea from \"@containers/blog/layout-03\";\nimport TestimonialArea from \"@containers/testimonial/layout-02\";\nimport ContactArea from \"@containers/contact/layout-03\";\n\nconst IndexFreelencerPage = ({ data }) => {\n    const content = normalizedData(data?.homePage?.content || []);\n    return (\n        <Layout pageTitle=\"Home Freelencer\">\n            <main className=\"main-page-wrapper\">\n                <div className=\"rn-slider-area\">\n                    <div className=\"container\">\n                        <div className=\"row row--30 pt--100 pt_sm--50\">\n                            <div className=\"col-lg-6\">\n                                <HeroArea data={content[\"hero-section\"]} />\n                            </div>\n                            <div className=\"col-lg-6\">\n                                <div className=\"sticky-home-wrapper\">\n                                    <AboutArea\n                                        data={content[\"about-section\"]}\n                                    />\n                                    <SkillArea\n                                        data={content[\"skill-section\"]}\n                                    />\n                                    <ServicesArea\n                                        data={content[\"service-section\"]}\n                                    />\n                                    <PortfolioArea\n                                        data={content[\"portfolio-section\"]}\n                                    />\n                                    <BlogArea\n                                        data={{\n                                            ...content[\"blog-section\"],\n                                            blogs: data?.allArticle?.nodes,\n                                        }}\n                                    />\n                                    <TestimonialArea\n                                        data={content[\"testimonial-section\"]}\n                                    />\n                                    <ContactArea\n                                        data={{\n                                            getform_url:\n                                                data.site.siteMetadata\n                                                    ?.getform_url,\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query FreelencerPageQuery {\n        site {\n            siteMetadata {\n                getform_url\n            }\n        }\n        homePage(title: { eq: \"freelencer-home\" }) {\n            content {\n                ...Content01\n            }\n        }\n        allArticle(limit: 3) {\n            nodes {\n                ...Article\n            }\n        }\n    }\n`;\n\nIndexFreelencerPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                getform_url: PropTypes.string,\n            }),\n        }),\n        homePage: PropTypes.shape({\n            content: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        allArticle: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n    }),\n};\n\nexport default IndexFreelencerPage;\n"],"names":["show","setShow","image","title","category","path","texts","onHide","dialogClassName","centered","id","className","type","onClick","src","alt","map","text","i","length","key","content","CardList","children","CardListItem","rest","Sticky","top","cn","style","defaultProps","data","date","slug","useState","onKeyPress","blogs","C","blog","url","getform_url","images","headings","dangerouslySetInnerHTML","__html","buttons","items","item","inner","designation","desc","sliderOptions","arrows","dots","options","prevIcon","nextIcon","description","normalizedData","homePage","pageTitle","allArticle","nodes","site","siteMetadata"],"sourceRoot":""}